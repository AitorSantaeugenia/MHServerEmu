// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Gazillion {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class CommonMessages {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_Gazillion_NetStructPoint3__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructPoint3, global::Gazillion.NetStructPoint3.Builder> internal__static_Gazillion_NetStructPoint3__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_NetStructIPoint3__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructIPoint3, global::Gazillion.NetStructIPoint3.Builder> internal__static_Gazillion_NetStructIPoint3__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_NetStructPoint2__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructPoint2, global::Gazillion.NetStructPoint2.Builder> internal__static_Gazillion_NetStructPoint2__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_NetStructIPoint2__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructIPoint2, global::Gazillion.NetStructIPoint2.Builder> internal__static_Gazillion_NetStructIPoint2__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_NetStructProperty__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructProperty, global::Gazillion.NetStructProperty.Builder> internal__static_Gazillion_NetStructProperty__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_NetStructPropertyList__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructPropertyList, global::Gazillion.NetStructPropertyList.Builder> internal__static_Gazillion_NetStructPropertyList__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_NetStructLocomotionPathNode__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructLocomotionPathNode, global::Gazillion.NetStructLocomotionPathNode.Builder> internal__static_Gazillion_NetStructLocomotionPathNode__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_NetStructLocomotionState__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructLocomotionState, global::Gazillion.NetStructLocomotionState.Builder> internal__static_Gazillion_NetStructLocomotionState__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_NetStructUniqueTransition__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructUniqueTransition, global::Gazillion.NetStructUniqueTransition.Builder> internal__static_Gazillion_NetStructUniqueTransition__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_NetStructCreateRegionParams__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructCreateRegionParams, global::Gazillion.NetStructCreateRegionParams.Builder> internal__static_Gazillion_NetStructCreateRegionParams__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_NetStructModChangeObject__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructModChangeObject, global::Gazillion.NetStructModChangeObject.Builder> internal__static_Gazillion_NetStructModChangeObject__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_NetStructPowerPointAllocation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructPowerPointAllocation, global::Gazillion.NetStructPowerPointAllocation.Builder> internal__static_Gazillion_NetStructPowerPointAllocation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_NetStructWarpDest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructWarpDest, global::Gazillion.NetStructWarpDest.Builder> internal__static_Gazillion_NetStructWarpDest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_CommunityMemberBroadcast__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.CommunityMemberBroadcast, global::Gazillion.CommunityMemberBroadcast.Builder> internal__static_Gazillion_CommunityMemberBroadcast__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_CommunityNotify__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.CommunityNotify, global::Gazillion.CommunityNotify.Builder> internal__static_Gazillion_CommunityNotify__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_NetStructLiveTuningSettingEnumValue__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructLiveTuningSettingEnumValue, global::Gazillion.NetStructLiveTuningSettingEnumValue.Builder> internal__static_Gazillion_NetStructLiveTuningSettingEnumValue__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_NetStructLiveTuningSettingProtoEnumValue__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructLiveTuningSettingProtoEnumValue, global::Gazillion.NetStructLiveTuningSettingProtoEnumValue.Builder> internal__static_Gazillion_NetStructLiveTuningSettingProtoEnumValue__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static CommonMessages() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRDb21tb25NZXNzYWdlcy5wcm90bxIJR2F6aWxsaW9uIkQKD05ldFN0cnVj", 
            "dFBvaW50MxIPCgFYGAEgASgCOgEwUgFYEg8KAVkYAiABKAI6ATBSAVkSDwoB", 
            "WhgDIAEoAjoBMFIBWiJFChBOZXRTdHJ1Y3RJUG9pbnQzEg8KAVgYASABKA06", 
            "ATBSAVgSDwoBWRgCIAEoDToBMFIBWRIPCgFaGAMgASgNOgEwUgFaIjMKD05l", 
            "dFN0cnVjdFBvaW50MhIPCgFYGAEgASgCOgEwUgFYEg8KAVkYAiABKAI6ATBS", 
            "AVkiNAoQTmV0U3RydWN0SVBvaW50MhIPCgFYGAEgASgNOgEwUgFYEg8KAVkY", 
            "AiABKA06ATBSAVkiOQoRTmV0U3RydWN0UHJvcGVydHkSDgoCaWQYASACKARS", 
            "AmlkEhQKBXZhbHVlGAIgAigEUgV2YWx1ZSJVChVOZXRTdHJ1Y3RQcm9wZXJ0", 
            "eUxpc3QSPAoKcHJvcGVydGllcxgBIAMoCzIcLkdhemlsbGlvbi5OZXRTdHJ1", 
            "Y3RQcm9wZXJ0eVIKcHJvcGVydGllcyJ9ChtOZXRTdHJ1Y3RMb2NvbW90aW9u", 
            "UGF0aE5vZGUSMgoGdmVydGV4GAEgAigLMhouR2F6aWxsaW9uLk5ldFN0cnVj", 
            "dFBvaW50M1IGdmVydGV4EioKEHZlcnRleFNpZGVSYWRpdXMYAiACKAVSEHZl", 
            "cnRleFNpZGVSYWRpdXMihgMKGE5ldFN0cnVjdExvY29tb3Rpb25TdGF0ZRIo", 
            "Cg9sb2NvbW90aW9uZmxhZ3MYASABKA1SD2xvY29tb3Rpb25mbGFncxIWCgZt", 
            "ZXRob2QYAiABKAVSBm1ldGhvZBIcCgltb3Zlc3BlZWQYAyABKAJSCW1vdmVz", 
            "cGVlZBIWCgZoZWlnaHQYBCABKA1SBmhlaWdodBImCg5mb2xsb3dlbnRpdHlp", 
            "ZBgFIAEoBFIOZm9sbG93ZW50aXR5aWQSLAoRZm9sbG93ZW50aXR5cmFuZ2UY", 
            "BiABKAJSEWZvbGxvd2VudGl0eXJhbmdlEigKD3VwZGF0ZXBhdGhub2RlcxgH", 
            "IAIoCFIPdXBkYXRlcGF0aG5vZGVzEkQKCXBhdGhub2RlcxgIIAMoCzImLkdh", 
            "emlsbGlvbi5OZXRTdHJ1Y3RMb2NvbW90aW9uUGF0aE5vZGVSCXBhdGhub2Rl", 
            "cxIsChFwYXRoZ29hbG5vZGVpbmRleBgJIAEoBVIRcGF0aGdvYWxub2RlaW5k", 
            "ZXgixwEKGU5ldFN0cnVjdFVuaXF1ZVRyYW5zaXRpb24SGgoIcmVnaW9uSWQY", 
            "ASACKARSCHJlZ2lvbklkEiQKDXJlZ2lvblByb3RvSWQYAiACKARSDXJlZ2lv", 
            "blByb3RvSWQSIAoLYXJlYVByb3RvSWQYAyACKARSC2FyZWFQcm90b0lkEiAK", 
            "C2NlbGxQcm90b0lkGAQgAigEUgtjZWxsUHJvdG9JZBIkCg1lbnRpdHlQcm90", 
            "b0lkGAUgASgEUg1lbnRpdHlQcm90b0lkIrQCChtOZXRTdHJ1Y3RDcmVhdGVS", 
            "ZWdpb25QYXJhbXMSFAoFbGV2ZWwYASACKA1SBWxldmVsElwKFm9yaWdpblVu", 
            "aXF1ZVRyYW5zaXRpb24YAiABKAsyJC5HYXppbGxpb24uTmV0U3RydWN0VW5p", 
            "cXVlVHJhbnNpdGlvblIWb3JpZ2luVW5pcXVlVHJhbnNpdGlvbhIvCg9sZXZl", 
            "bElzT3ZlcnJpZGUYAyABKAg6BWZhbHNlUg9sZXZlbElzT3ZlcnJpZGUSLgoS", 
            "ZGlmZmljdWx0eVByb3RvUmVmGAQgASgEUhJkaWZmaWN1bHR5UHJvdG9SZWYS", 
            "IwoLbWF0Y2hOdW1iZXIYBSABKAQ6ATBSC21hdGNoTnVtYmVyEhsKBWNoZWF0", 
            "GAYgASgIOgVmYWxzZVIFY2hlYXQiRAoYTmV0U3RydWN0TW9kQ2hhbmdlT2Jq", 
            "ZWN0EhAKA21vZBgBIAIoBFIDbW9kEhYKBmNoYW5nZRgCIAIoDVIGY2hhbmdl", 
            "IlkKHU5ldFN0cnVjdFBvd2VyUG9pbnRBbGxvY2F0aW9uEiIKDHBvd2VyUHJv", 
            "dG9JZBgBIAIoBFIMcG93ZXJQcm90b0lkEhQKBWRlbHRhGAIgAigNUgVkZWx0", 
            "YSK5AwoRTmV0U3RydWN0V2FycERlc3QSNAoVRGVzdFJlZ2lvblByb3RvdHlw", 
            "ZUlkGAEgAigEUhVEZXN0UmVnaW9uUHJvdG90eXBlSWQSIgoMRGVzdFJlZ2lv", 
            "bklkGAIgASgEUgxEZXN0UmVnaW9uSWQSJgoORGVzdEVudGl0eURiSWQYAyAB", 
            "KARSDkRlc3RFbnRpdHlEYklkEj4KDERlc3RQb3NpdGlvbhgEIAEoCzIaLkdh", 
            "emlsbGlvbi5OZXRTdHJ1Y3RQb2ludDNSDERlc3RQb3NpdGlvbhIeCgpUcmFu", 
            "c2ZlcklkGAUgASgEUgpUcmFuc2ZlcklkEjAKE0Rlc3RBcmVhUHJvdG90eXBl", 
            "SWQYBiABKARSE0Rlc3RBcmVhUHJvdG90eXBlSWQSVAolRGVzdFJlZ2lvbkNv", 
            "bm5lY3Rpb25UYXJnZXRQcm90b3R5cGVJZBgHIAEoBFIlRGVzdFJlZ2lvbkNv", 
            "bm5lY3Rpb25UYXJnZXRQcm90b3R5cGVJZBI6ChhEZXN0U3RvcnlXYXJwUHJv", 
            "dG90eXBlSWQYCCABKARSGERlc3RTdG9yeVdhcnBQcm90b3R5cGVJZCKeAgoY", 
            "Q29tbXVuaXR5TWVtYmVyQnJvYWRjYXN0EioKEG1lbWJlclBsYXllckRiSWQY", 
            "ASACKARSEG1lbWJlclBsYXllckRiSWQSMwoSY3VycmVudFJlZ2lvblJlZklk", 
            "GAIgASgEOgMxMjNSEmN1cnJlbnRSZWdpb25SZWZJZBIzChJjdXJyZW50QXZh", 
            "dGFyUmVmSWQYAyABKAQ6AzEyM1ISY3VycmVudEF2YXRhclJlZklkEjQKFWN1", 
            "cnJlbnRDaGFyYWN0ZXJMZXZlbBgEIAEoBFIVY3VycmVudENoYXJhY3Rlckxl", 
            "dmVsEjYKFmN1cnJlbnRQdnBGYWN0aW9uUmVmSWQYBSABKARSFmN1cnJlbnRQ", 
            "dnBGYWN0aW9uUmVmSWQixQEKD0NvbW11bml0eU5vdGlmeRIqChB0YXJnZXRQ", 
            "bGF5ZXJEYklkGAEgAigEUhB0YXJnZXRQbGF5ZXJEYklkEioKEHNvdXJjZVBs", 
            "YXllck5hbWUYAiACKAlSEHNvdXJjZVBsYXllck5hbWUSGgoIY2lyY2xlSWQY", 
            "AyACKARSCGNpcmNsZUlkEj4KCW9wZXJhdGlvbhgEIAIoDjIgLkdhemlsbGlv", 
            "bi5Nb2RpZnlDaXJjbGVPcGVyYXRpb25SCW9wZXJhdGlvbiJzCiNOZXRTdHJ1", 
            "Y3RMaXZlVHVuaW5nU2V0dGluZ0VudW1WYWx1ZRIkCg10dW5pbmdWYXJFbnVt", 
            "GAEgAigFUg10dW5pbmdWYXJFbnVtEiYKDnR1bmluZ1ZhclZhbHVlGAIgAigC", 
            "Ug50dW5pbmdWYXJWYWx1ZSKkAQooTmV0U3RydWN0TGl2ZVR1bmluZ1NldHRp", 
            "bmdQcm90b0VudW1WYWx1ZRIqChB0dW5pbmdWYXJQcm90b0lkGAEgAigEUhB0", 
            "dW5pbmdWYXJQcm90b0lkEiQKDXR1bmluZ1ZhckVudW0YAiACKAVSDXR1bmlu", 
            "Z1ZhckVudW0SJgoOdHVuaW5nVmFyVmFsdWUYAyACKAJSDnR1bmluZ1ZhclZh", 
            "bHVlKjYKFU1vZGlmeUNpcmNsZU9wZXJhdGlvbhIMCghlTUNPX0FkZBABEg8K", 
            "C2VNQ09fUmVtb3ZlEAIqjgEKD0dsb2JhbFR1bmluZ1ZhchIXChNlR1RWX1Zl", 
            "bmRvckJ1eVByaWNlEAASGAoUZUdUVl9WZW5kb3JTZWxsUHJpY2UQARIVChFl", 
            "R1RWX1ZlbmRvclhQR2FpbhACEhMKD2VHVFZfUFZQRW5hYmxlZBADEhwKGGVH", 
            "VFZfTnVtR2xvYmFsVHVuaW5nVmFycxAEKmcKDUFyZWFUdW5pbmdWYXISGQoV", 
            "ZUFUVl9BcmVhTW9iU3Bhd25IZWF0EAASHwobZUFUVl9BcmVhTW9iU3Bhd25I", 
            "ZWF0UmV0dXJuEAESGgoWZUFUVl9OdW1BcmVhVHVuaW5nVmFycxACKsYBChRX", 
            "b3JsZEVudGl0eVR1bmluZ1ZhchIYChRlV0VUVl9Nb2JQb3dlckRhbWFnZRAA", 
            "EhMKD2VXRVRWX01vYkhlYWx0aBABEg8KC2VXRVRWX01vYlhQEAISFQoRZVdF", 
            "VFZfTW9iRHJvcFJhdGUQAxIcChhlV0VUVl9Nb2JTcGVjaWFsRHJvcFJhdGUQ", 
            "BBIVChFlV0VUVl9JdGVtRW5hYmxlZBAFEiIKHmVXRVRWX051bVdvcmxkRW50", 
            "aXR5VHVuaW5nVmFycxAGKlwKD1BvcE9ialR1bmluZ1ZhchIgChxlUE9UVl9Q", 
            "b3B1bGF0aW9uT2JqZWN0V2VpZ2h0EAASJwojZVBPVFZfTnVtUG9wdWxhdGlv", 
            "bk9iamVjdFR1bmluZ1ZhcnMQASpzCg5Qb3dlclR1bmluZ1ZhchISCg5lUFRW", 
            "X1Bvd2VyQ29zdBAAEhcKE2VQVFZfUG93ZXJEYW1hZ2VQVkUQARIXChNlUFRW", 
            "X1Bvd2VyRGFtYWdlUFZQEAISGwoXZVBUVl9OdW1Qb3dlclR1bmluZ1ZhcnMQ", 
            "AypFCg9SZWdpb25UdW5pbmdWYXISFAoQZVJUVl9QbGF5ZXJMaW1pdBAAEhwK", 
          "GGVSVFZfTnVtUmVnaW9uVHVuaW5nVmFycxAB"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Gazillion_NetStructPoint3__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Gazillion_NetStructPoint3__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructPoint3, global::Gazillion.NetStructPoint3.Builder>(internal__static_Gazillion_NetStructPoint3__Descriptor,
                new string[] { "X", "Y", "Z", });
        internal__static_Gazillion_NetStructIPoint3__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Gazillion_NetStructIPoint3__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructIPoint3, global::Gazillion.NetStructIPoint3.Builder>(internal__static_Gazillion_NetStructIPoint3__Descriptor,
                new string[] { "X", "Y", "Z", });
        internal__static_Gazillion_NetStructPoint2__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Gazillion_NetStructPoint2__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructPoint2, global::Gazillion.NetStructPoint2.Builder>(internal__static_Gazillion_NetStructPoint2__Descriptor,
                new string[] { "X", "Y", });
        internal__static_Gazillion_NetStructIPoint2__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Gazillion_NetStructIPoint2__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructIPoint2, global::Gazillion.NetStructIPoint2.Builder>(internal__static_Gazillion_NetStructIPoint2__Descriptor,
                new string[] { "X", "Y", });
        internal__static_Gazillion_NetStructProperty__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Gazillion_NetStructProperty__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructProperty, global::Gazillion.NetStructProperty.Builder>(internal__static_Gazillion_NetStructProperty__Descriptor,
                new string[] { "Id", "Value", });
        internal__static_Gazillion_NetStructPropertyList__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Gazillion_NetStructPropertyList__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructPropertyList, global::Gazillion.NetStructPropertyList.Builder>(internal__static_Gazillion_NetStructPropertyList__Descriptor,
                new string[] { "Properties", });
        internal__static_Gazillion_NetStructLocomotionPathNode__Descriptor = Descriptor.MessageTypes[6];
        internal__static_Gazillion_NetStructLocomotionPathNode__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructLocomotionPathNode, global::Gazillion.NetStructLocomotionPathNode.Builder>(internal__static_Gazillion_NetStructLocomotionPathNode__Descriptor,
                new string[] { "Vertex", "VertexSideRadius", });
        internal__static_Gazillion_NetStructLocomotionState__Descriptor = Descriptor.MessageTypes[7];
        internal__static_Gazillion_NetStructLocomotionState__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructLocomotionState, global::Gazillion.NetStructLocomotionState.Builder>(internal__static_Gazillion_NetStructLocomotionState__Descriptor,
                new string[] { "Locomotionflags", "Method", "Movespeed", "Height", "Followentityid", "Followentityrange", "Updatepathnodes", "Pathnodes", "Pathgoalnodeindex", });
        internal__static_Gazillion_NetStructUniqueTransition__Descriptor = Descriptor.MessageTypes[8];
        internal__static_Gazillion_NetStructUniqueTransition__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructUniqueTransition, global::Gazillion.NetStructUniqueTransition.Builder>(internal__static_Gazillion_NetStructUniqueTransition__Descriptor,
                new string[] { "RegionId", "RegionProtoId", "AreaProtoId", "CellProtoId", "EntityProtoId", });
        internal__static_Gazillion_NetStructCreateRegionParams__Descriptor = Descriptor.MessageTypes[9];
        internal__static_Gazillion_NetStructCreateRegionParams__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructCreateRegionParams, global::Gazillion.NetStructCreateRegionParams.Builder>(internal__static_Gazillion_NetStructCreateRegionParams__Descriptor,
                new string[] { "Level", "OriginUniqueTransition", "LevelIsOverride", "DifficultyProtoRef", "MatchNumber", "Cheat", });
        internal__static_Gazillion_NetStructModChangeObject__Descriptor = Descriptor.MessageTypes[10];
        internal__static_Gazillion_NetStructModChangeObject__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructModChangeObject, global::Gazillion.NetStructModChangeObject.Builder>(internal__static_Gazillion_NetStructModChangeObject__Descriptor,
                new string[] { "Mod", "Change", });
        internal__static_Gazillion_NetStructPowerPointAllocation__Descriptor = Descriptor.MessageTypes[11];
        internal__static_Gazillion_NetStructPowerPointAllocation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructPowerPointAllocation, global::Gazillion.NetStructPowerPointAllocation.Builder>(internal__static_Gazillion_NetStructPowerPointAllocation__Descriptor,
                new string[] { "PowerProtoId", "Delta", });
        internal__static_Gazillion_NetStructWarpDest__Descriptor = Descriptor.MessageTypes[12];
        internal__static_Gazillion_NetStructWarpDest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructWarpDest, global::Gazillion.NetStructWarpDest.Builder>(internal__static_Gazillion_NetStructWarpDest__Descriptor,
                new string[] { "DestRegionPrototypeId", "DestRegionId", "DestEntityDbId", "DestPosition", "TransferId", "DestAreaPrototypeId", "DestRegionConnectionTargetPrototypeId", "DestStoryWarpPrototypeId", });
        internal__static_Gazillion_CommunityMemberBroadcast__Descriptor = Descriptor.MessageTypes[13];
        internal__static_Gazillion_CommunityMemberBroadcast__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.CommunityMemberBroadcast, global::Gazillion.CommunityMemberBroadcast.Builder>(internal__static_Gazillion_CommunityMemberBroadcast__Descriptor,
                new string[] { "MemberPlayerDbId", "CurrentRegionRefId", "CurrentAvatarRefId", "CurrentCharacterLevel", "CurrentPvpFactionRefId", });
        internal__static_Gazillion_CommunityNotify__Descriptor = Descriptor.MessageTypes[14];
        internal__static_Gazillion_CommunityNotify__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.CommunityNotify, global::Gazillion.CommunityNotify.Builder>(internal__static_Gazillion_CommunityNotify__Descriptor,
                new string[] { "TargetPlayerDbId", "SourcePlayerName", "CircleId", "Operation", });
        internal__static_Gazillion_NetStructLiveTuningSettingEnumValue__Descriptor = Descriptor.MessageTypes[15];
        internal__static_Gazillion_NetStructLiveTuningSettingEnumValue__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructLiveTuningSettingEnumValue, global::Gazillion.NetStructLiveTuningSettingEnumValue.Builder>(internal__static_Gazillion_NetStructLiveTuningSettingEnumValue__Descriptor,
                new string[] { "TuningVarEnum", "TuningVarValue", });
        internal__static_Gazillion_NetStructLiveTuningSettingProtoEnumValue__Descriptor = Descriptor.MessageTypes[16];
        internal__static_Gazillion_NetStructLiveTuningSettingProtoEnumValue__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.NetStructLiveTuningSettingProtoEnumValue, global::Gazillion.NetStructLiveTuningSettingProtoEnumValue.Builder>(internal__static_Gazillion_NetStructLiveTuningSettingProtoEnumValue__Descriptor,
                new string[] { "TuningVarProtoId", "TuningVarEnum", "TuningVarValue", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum ModifyCircleOperation {
    eMCO_Add = 1,
    eMCO_Remove = 2,
  }
  
  public enum GlobalTuningVar {
    eGTV_VendorBuyPrice = 0,
    eGTV_VendorSellPrice = 1,
    eGTV_VendorXPGain = 2,
    eGTV_PVPEnabled = 3,
    eGTV_NumGlobalTuningVars = 4,
  }
  
  public enum AreaTuningVar {
    eATV_AreaMobSpawnHeat = 0,
    eATV_AreaMobSpawnHeatReturn = 1,
    eATV_NumAreaTuningVars = 2,
  }
  
  public enum WorldEntityTuningVar {
    eWETV_MobPowerDamage = 0,
    eWETV_MobHealth = 1,
    eWETV_MobXP = 2,
    eWETV_MobDropRate = 3,
    eWETV_MobSpecialDropRate = 4,
    eWETV_ItemEnabled = 5,
    eWETV_NumWorldEntityTuningVars = 6,
  }
  
  public enum PopObjTuningVar {
    ePOTV_PopulationObjectWeight = 0,
    ePOTV_NumPopulationObjectTuningVars = 1,
  }
  
  public enum PowerTuningVar {
    ePTV_PowerCost = 0,
    ePTV_PowerDamagePVE = 1,
    ePTV_PowerDamagePVP = 2,
    ePTV_NumPowerTuningVars = 3,
  }
  
  public enum RegionTuningVar {
    eRTV_PlayerLimit = 0,
    eRTV_NumRegionTuningVars = 1,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetStructPoint3 : pb::GeneratedMessage<NetStructPoint3, NetStructPoint3.Builder> {
    private NetStructPoint3() { }
    private static readonly NetStructPoint3 defaultInstance = new NetStructPoint3().MakeReadOnly();
    private static readonly string[] _netStructPoint3FieldNames = new string[] { "X", "Y", "Z" };
    private static readonly uint[] _netStructPoint3FieldTags = new uint[] { 13, 21, 29 };
    public static NetStructPoint3 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetStructPoint3 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetStructPoint3 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructPoint3__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetStructPoint3, NetStructPoint3.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructPoint3__FieldAccessorTable; }
    }
    
    public const int XFieldNumber = 1;
    private bool hasX;
    private float x_;
    public bool HasX {
      get { return hasX; }
    }
    public float X {
      get { return x_; }
    }
    
    public const int YFieldNumber = 2;
    private bool hasY;
    private float y_;
    public bool HasY {
      get { return hasY; }
    }
    public float Y {
      get { return y_; }
    }
    
    public const int ZFieldNumber = 3;
    private bool hasZ;
    private float z_;
    public bool HasZ {
      get { return hasZ; }
    }
    public float Z {
      get { return z_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netStructPoint3FieldNames;
      if (hasX) {
        output.WriteFloat(1, field_names[0], X);
      }
      if (hasY) {
        output.WriteFloat(2, field_names[1], Y);
      }
      if (hasZ) {
        output.WriteFloat(3, field_names[2], Z);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasX) {
        size += pb::CodedOutputStream.ComputeFloatSize(1, X);
      }
      if (hasY) {
        size += pb::CodedOutputStream.ComputeFloatSize(2, Y);
      }
      if (hasZ) {
        size += pb::CodedOutputStream.ComputeFloatSize(3, Z);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetStructPoint3 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructPoint3 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructPoint3 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructPoint3 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructPoint3 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructPoint3 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetStructPoint3 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetStructPoint3 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetStructPoint3 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructPoint3 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetStructPoint3 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetStructPoint3 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetStructPoint3, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetStructPoint3 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetStructPoint3 result;
      
      private NetStructPoint3 PrepareBuilder() {
        if (resultIsReadOnly) {
          NetStructPoint3 original = result;
          result = new NetStructPoint3();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetStructPoint3 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.NetStructPoint3.Descriptor; }
      }
      
      public override NetStructPoint3 DefaultInstanceForType {
        get { return global::Gazillion.NetStructPoint3.DefaultInstance; }
      }
      
      public override NetStructPoint3 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetStructPoint3) {
          return MergeFrom((NetStructPoint3) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetStructPoint3 other) {
        if (other == global::Gazillion.NetStructPoint3.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        if (other.HasZ) {
          Z = other.Z;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netStructPoint3FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netStructPoint3FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 13: {
              result.hasX = input.ReadFloat(ref result.x_);
              break;
            }
            case 21: {
              result.hasY = input.ReadFloat(ref result.y_);
              break;
            }
            case 29: {
              result.hasZ = input.ReadFloat(ref result.z_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasX {
        get { return result.hasX; }
      }
      public float X {
        get { return result.X; }
        set { SetX(value); }
      }
      public Builder SetX(float value) {
        PrepareBuilder();
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder ClearX() {
        PrepareBuilder();
        result.hasX = false;
        result.x_ = 0F;
        return this;
      }
      
      public bool HasY {
        get { return result.hasY; }
      }
      public float Y {
        get { return result.Y; }
        set { SetY(value); }
      }
      public Builder SetY(float value) {
        PrepareBuilder();
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder ClearY() {
        PrepareBuilder();
        result.hasY = false;
        result.y_ = 0F;
        return this;
      }
      
      public bool HasZ {
        get { return result.hasZ; }
      }
      public float Z {
        get { return result.Z; }
        set { SetZ(value); }
      }
      public Builder SetZ(float value) {
        PrepareBuilder();
        result.hasZ = true;
        result.z_ = value;
        return this;
      }
      public Builder ClearZ() {
        PrepareBuilder();
        result.hasZ = false;
        result.z_ = 0F;
        return this;
      }
    }
    static NetStructPoint3() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetStructIPoint3 : pb::GeneratedMessage<NetStructIPoint3, NetStructIPoint3.Builder> {
    private NetStructIPoint3() { }
    private static readonly NetStructIPoint3 defaultInstance = new NetStructIPoint3().MakeReadOnly();
    private static readonly string[] _netStructIPoint3FieldNames = new string[] { "X", "Y", "Z" };
    private static readonly uint[] _netStructIPoint3FieldTags = new uint[] { 8, 16, 24 };
    public static NetStructIPoint3 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetStructIPoint3 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetStructIPoint3 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructIPoint3__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetStructIPoint3, NetStructIPoint3.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructIPoint3__FieldAccessorTable; }
    }
    
    public const int XFieldNumber = 1;
    private bool hasX;
    private uint x_;
    public bool HasX {
      get { return hasX; }
    }
    public uint X {
      get { return x_; }
    }
    
    public const int YFieldNumber = 2;
    private bool hasY;
    private uint y_;
    public bool HasY {
      get { return hasY; }
    }
    public uint Y {
      get { return y_; }
    }
    
    public const int ZFieldNumber = 3;
    private bool hasZ;
    private uint z_;
    public bool HasZ {
      get { return hasZ; }
    }
    public uint Z {
      get { return z_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netStructIPoint3FieldNames;
      if (hasX) {
        output.WriteUInt32(1, field_names[0], X);
      }
      if (hasY) {
        output.WriteUInt32(2, field_names[1], Y);
      }
      if (hasZ) {
        output.WriteUInt32(3, field_names[2], Z);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasX) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, X);
      }
      if (hasY) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Y);
      }
      if (hasZ) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, Z);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetStructIPoint3 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructIPoint3 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructIPoint3 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructIPoint3 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructIPoint3 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructIPoint3 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetStructIPoint3 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetStructIPoint3 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetStructIPoint3 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructIPoint3 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetStructIPoint3 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetStructIPoint3 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetStructIPoint3, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetStructIPoint3 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetStructIPoint3 result;
      
      private NetStructIPoint3 PrepareBuilder() {
        if (resultIsReadOnly) {
          NetStructIPoint3 original = result;
          result = new NetStructIPoint3();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetStructIPoint3 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.NetStructIPoint3.Descriptor; }
      }
      
      public override NetStructIPoint3 DefaultInstanceForType {
        get { return global::Gazillion.NetStructIPoint3.DefaultInstance; }
      }
      
      public override NetStructIPoint3 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetStructIPoint3) {
          return MergeFrom((NetStructIPoint3) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetStructIPoint3 other) {
        if (other == global::Gazillion.NetStructIPoint3.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        if (other.HasZ) {
          Z = other.Z;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netStructIPoint3FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netStructIPoint3FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasX = input.ReadUInt32(ref result.x_);
              break;
            }
            case 16: {
              result.hasY = input.ReadUInt32(ref result.y_);
              break;
            }
            case 24: {
              result.hasZ = input.ReadUInt32(ref result.z_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasX {
        get { return result.hasX; }
      }
      public uint X {
        get { return result.X; }
        set { SetX(value); }
      }
      public Builder SetX(uint value) {
        PrepareBuilder();
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder ClearX() {
        PrepareBuilder();
        result.hasX = false;
        result.x_ = 0;
        return this;
      }
      
      public bool HasY {
        get { return result.hasY; }
      }
      public uint Y {
        get { return result.Y; }
        set { SetY(value); }
      }
      public Builder SetY(uint value) {
        PrepareBuilder();
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder ClearY() {
        PrepareBuilder();
        result.hasY = false;
        result.y_ = 0;
        return this;
      }
      
      public bool HasZ {
        get { return result.hasZ; }
      }
      public uint Z {
        get { return result.Z; }
        set { SetZ(value); }
      }
      public Builder SetZ(uint value) {
        PrepareBuilder();
        result.hasZ = true;
        result.z_ = value;
        return this;
      }
      public Builder ClearZ() {
        PrepareBuilder();
        result.hasZ = false;
        result.z_ = 0;
        return this;
      }
    }
    static NetStructIPoint3() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetStructPoint2 : pb::GeneratedMessage<NetStructPoint2, NetStructPoint2.Builder> {
    private NetStructPoint2() { }
    private static readonly NetStructPoint2 defaultInstance = new NetStructPoint2().MakeReadOnly();
    private static readonly string[] _netStructPoint2FieldNames = new string[] { "X", "Y" };
    private static readonly uint[] _netStructPoint2FieldTags = new uint[] { 13, 21 };
    public static NetStructPoint2 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetStructPoint2 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetStructPoint2 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructPoint2__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetStructPoint2, NetStructPoint2.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructPoint2__FieldAccessorTable; }
    }
    
    public const int XFieldNumber = 1;
    private bool hasX;
    private float x_;
    public bool HasX {
      get { return hasX; }
    }
    public float X {
      get { return x_; }
    }
    
    public const int YFieldNumber = 2;
    private bool hasY;
    private float y_;
    public bool HasY {
      get { return hasY; }
    }
    public float Y {
      get { return y_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netStructPoint2FieldNames;
      if (hasX) {
        output.WriteFloat(1, field_names[0], X);
      }
      if (hasY) {
        output.WriteFloat(2, field_names[1], Y);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasX) {
        size += pb::CodedOutputStream.ComputeFloatSize(1, X);
      }
      if (hasY) {
        size += pb::CodedOutputStream.ComputeFloatSize(2, Y);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetStructPoint2 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructPoint2 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructPoint2 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructPoint2 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructPoint2 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructPoint2 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetStructPoint2 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetStructPoint2 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetStructPoint2 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructPoint2 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetStructPoint2 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetStructPoint2 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetStructPoint2, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetStructPoint2 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetStructPoint2 result;
      
      private NetStructPoint2 PrepareBuilder() {
        if (resultIsReadOnly) {
          NetStructPoint2 original = result;
          result = new NetStructPoint2();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetStructPoint2 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.NetStructPoint2.Descriptor; }
      }
      
      public override NetStructPoint2 DefaultInstanceForType {
        get { return global::Gazillion.NetStructPoint2.DefaultInstance; }
      }
      
      public override NetStructPoint2 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetStructPoint2) {
          return MergeFrom((NetStructPoint2) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetStructPoint2 other) {
        if (other == global::Gazillion.NetStructPoint2.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netStructPoint2FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netStructPoint2FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 13: {
              result.hasX = input.ReadFloat(ref result.x_);
              break;
            }
            case 21: {
              result.hasY = input.ReadFloat(ref result.y_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasX {
        get { return result.hasX; }
      }
      public float X {
        get { return result.X; }
        set { SetX(value); }
      }
      public Builder SetX(float value) {
        PrepareBuilder();
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder ClearX() {
        PrepareBuilder();
        result.hasX = false;
        result.x_ = 0F;
        return this;
      }
      
      public bool HasY {
        get { return result.hasY; }
      }
      public float Y {
        get { return result.Y; }
        set { SetY(value); }
      }
      public Builder SetY(float value) {
        PrepareBuilder();
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder ClearY() {
        PrepareBuilder();
        result.hasY = false;
        result.y_ = 0F;
        return this;
      }
    }
    static NetStructPoint2() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetStructIPoint2 : pb::GeneratedMessage<NetStructIPoint2, NetStructIPoint2.Builder> {
    private NetStructIPoint2() { }
    private static readonly NetStructIPoint2 defaultInstance = new NetStructIPoint2().MakeReadOnly();
    private static readonly string[] _netStructIPoint2FieldNames = new string[] { "X", "Y" };
    private static readonly uint[] _netStructIPoint2FieldTags = new uint[] { 8, 16 };
    public static NetStructIPoint2 DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetStructIPoint2 DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetStructIPoint2 ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructIPoint2__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetStructIPoint2, NetStructIPoint2.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructIPoint2__FieldAccessorTable; }
    }
    
    public const int XFieldNumber = 1;
    private bool hasX;
    private uint x_;
    public bool HasX {
      get { return hasX; }
    }
    public uint X {
      get { return x_; }
    }
    
    public const int YFieldNumber = 2;
    private bool hasY;
    private uint y_;
    public bool HasY {
      get { return hasY; }
    }
    public uint Y {
      get { return y_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netStructIPoint2FieldNames;
      if (hasX) {
        output.WriteUInt32(1, field_names[0], X);
      }
      if (hasY) {
        output.WriteUInt32(2, field_names[1], Y);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasX) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, X);
      }
      if (hasY) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Y);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetStructIPoint2 ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructIPoint2 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructIPoint2 ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructIPoint2 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructIPoint2 ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructIPoint2 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetStructIPoint2 ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetStructIPoint2 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetStructIPoint2 ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructIPoint2 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetStructIPoint2 MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetStructIPoint2 prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetStructIPoint2, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetStructIPoint2 cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetStructIPoint2 result;
      
      private NetStructIPoint2 PrepareBuilder() {
        if (resultIsReadOnly) {
          NetStructIPoint2 original = result;
          result = new NetStructIPoint2();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetStructIPoint2 MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.NetStructIPoint2.Descriptor; }
      }
      
      public override NetStructIPoint2 DefaultInstanceForType {
        get { return global::Gazillion.NetStructIPoint2.DefaultInstance; }
      }
      
      public override NetStructIPoint2 BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetStructIPoint2) {
          return MergeFrom((NetStructIPoint2) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetStructIPoint2 other) {
        if (other == global::Gazillion.NetStructIPoint2.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netStructIPoint2FieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netStructIPoint2FieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasX = input.ReadUInt32(ref result.x_);
              break;
            }
            case 16: {
              result.hasY = input.ReadUInt32(ref result.y_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasX {
        get { return result.hasX; }
      }
      public uint X {
        get { return result.X; }
        set { SetX(value); }
      }
      public Builder SetX(uint value) {
        PrepareBuilder();
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder ClearX() {
        PrepareBuilder();
        result.hasX = false;
        result.x_ = 0;
        return this;
      }
      
      public bool HasY {
        get { return result.hasY; }
      }
      public uint Y {
        get { return result.Y; }
        set { SetY(value); }
      }
      public Builder SetY(uint value) {
        PrepareBuilder();
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder ClearY() {
        PrepareBuilder();
        result.hasY = false;
        result.y_ = 0;
        return this;
      }
    }
    static NetStructIPoint2() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetStructProperty : pb::GeneratedMessage<NetStructProperty, NetStructProperty.Builder> {
    private NetStructProperty() { }
    private static readonly NetStructProperty defaultInstance = new NetStructProperty().MakeReadOnly();
    private static readonly string[] _netStructPropertyFieldNames = new string[] { "id", "value" };
    private static readonly uint[] _netStructPropertyFieldTags = new uint[] { 8, 16 };
    public static NetStructProperty DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetStructProperty DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetStructProperty ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructProperty__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetStructProperty, NetStructProperty.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructProperty__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private ulong id_;
    public bool HasId {
      get { return hasId; }
    }
    public ulong Id {
      get { return id_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private ulong value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public ulong Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netStructPropertyFieldNames;
      if (hasId) {
        output.WriteUInt64(1, field_names[0], Id);
      }
      if (hasValue) {
        output.WriteUInt64(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, Id);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetStructProperty ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructProperty ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructProperty ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructProperty ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructProperty ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructProperty ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetStructProperty ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetStructProperty ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetStructProperty ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructProperty ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetStructProperty MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetStructProperty prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetStructProperty, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetStructProperty cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetStructProperty result;
      
      private NetStructProperty PrepareBuilder() {
        if (resultIsReadOnly) {
          NetStructProperty original = result;
          result = new NetStructProperty();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetStructProperty MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.NetStructProperty.Descriptor; }
      }
      
      public override NetStructProperty DefaultInstanceForType {
        get { return global::Gazillion.NetStructProperty.DefaultInstance; }
      }
      
      public override NetStructProperty BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetStructProperty) {
          return MergeFrom((NetStructProperty) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetStructProperty other) {
        if (other == global::Gazillion.NetStructProperty.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netStructPropertyFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netStructPropertyFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadUInt64(ref result.id_);
              break;
            }
            case 16: {
              result.hasValue = input.ReadUInt64(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public ulong Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(ulong value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0UL;
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public ulong Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(ulong value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0UL;
        return this;
      }
    }
    static NetStructProperty() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetStructPropertyList : pb::GeneratedMessage<NetStructPropertyList, NetStructPropertyList.Builder> {
    private NetStructPropertyList() { }
    private static readonly NetStructPropertyList defaultInstance = new NetStructPropertyList().MakeReadOnly();
    private static readonly string[] _netStructPropertyListFieldNames = new string[] { "properties" };
    private static readonly uint[] _netStructPropertyListFieldTags = new uint[] { 10 };
    public static NetStructPropertyList DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetStructPropertyList DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetStructPropertyList ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructPropertyList__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetStructPropertyList, NetStructPropertyList.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructPropertyList__FieldAccessorTable; }
    }
    
    public const int PropertiesFieldNumber = 1;
    private pbc::PopsicleList<global::Gazillion.NetStructProperty> properties_ = new pbc::PopsicleList<global::Gazillion.NetStructProperty>();
    public scg::IList<global::Gazillion.NetStructProperty> PropertiesList {
      get { return properties_; }
    }
    public int PropertiesCount {
      get { return properties_.Count; }
    }
    public global::Gazillion.NetStructProperty GetProperties(int index) {
      return properties_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::Gazillion.NetStructProperty element in PropertiesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netStructPropertyListFieldNames;
      if (properties_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], properties_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::Gazillion.NetStructProperty element in PropertiesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetStructPropertyList ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructPropertyList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructPropertyList ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructPropertyList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructPropertyList ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructPropertyList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetStructPropertyList ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetStructPropertyList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetStructPropertyList ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructPropertyList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetStructPropertyList MakeReadOnly() {
      properties_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetStructPropertyList prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetStructPropertyList, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetStructPropertyList cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetStructPropertyList result;
      
      private NetStructPropertyList PrepareBuilder() {
        if (resultIsReadOnly) {
          NetStructPropertyList original = result;
          result = new NetStructPropertyList();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetStructPropertyList MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.NetStructPropertyList.Descriptor; }
      }
      
      public override NetStructPropertyList DefaultInstanceForType {
        get { return global::Gazillion.NetStructPropertyList.DefaultInstance; }
      }
      
      public override NetStructPropertyList BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetStructPropertyList) {
          return MergeFrom((NetStructPropertyList) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetStructPropertyList other) {
        if (other == global::Gazillion.NetStructPropertyList.DefaultInstance) return this;
        PrepareBuilder();
        if (other.properties_.Count != 0) {
          result.properties_.Add(other.properties_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netStructPropertyListFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netStructPropertyListFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.properties_, global::Gazillion.NetStructProperty.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::Gazillion.NetStructProperty> PropertiesList {
        get { return PrepareBuilder().properties_; }
      }
      public int PropertiesCount {
        get { return result.PropertiesCount; }
      }
      public global::Gazillion.NetStructProperty GetProperties(int index) {
        return result.GetProperties(index);
      }
      public Builder SetProperties(int index, global::Gazillion.NetStructProperty value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.properties_[index] = value;
        return this;
      }
      public Builder SetProperties(int index, global::Gazillion.NetStructProperty.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.properties_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddProperties(global::Gazillion.NetStructProperty value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.properties_.Add(value);
        return this;
      }
      public Builder AddProperties(global::Gazillion.NetStructProperty.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.properties_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeProperties(scg::IEnumerable<global::Gazillion.NetStructProperty> values) {
        PrepareBuilder();
        result.properties_.Add(values);
        return this;
      }
      public Builder ClearProperties() {
        PrepareBuilder();
        result.properties_.Clear();
        return this;
      }
    }
    static NetStructPropertyList() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetStructLocomotionPathNode : pb::GeneratedMessage<NetStructLocomotionPathNode, NetStructLocomotionPathNode.Builder> {
    private NetStructLocomotionPathNode() { }
    private static readonly NetStructLocomotionPathNode defaultInstance = new NetStructLocomotionPathNode().MakeReadOnly();
    private static readonly string[] _netStructLocomotionPathNodeFieldNames = new string[] { "vertex", "vertexSideRadius" };
    private static readonly uint[] _netStructLocomotionPathNodeFieldTags = new uint[] { 10, 16 };
    public static NetStructLocomotionPathNode DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetStructLocomotionPathNode DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetStructLocomotionPathNode ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructLocomotionPathNode__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetStructLocomotionPathNode, NetStructLocomotionPathNode.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructLocomotionPathNode__FieldAccessorTable; }
    }
    
    public const int VertexFieldNumber = 1;
    private bool hasVertex;
    private global::Gazillion.NetStructPoint3 vertex_;
    public bool HasVertex {
      get { return hasVertex; }
    }
    public global::Gazillion.NetStructPoint3 Vertex {
      get { return vertex_ ?? global::Gazillion.NetStructPoint3.DefaultInstance; }
    }
    
    public const int VertexSideRadiusFieldNumber = 2;
    private bool hasVertexSideRadius;
    private int vertexSideRadius_;
    public bool HasVertexSideRadius {
      get { return hasVertexSideRadius; }
    }
    public int VertexSideRadius {
      get { return vertexSideRadius_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasVertex) return false;
        if (!hasVertexSideRadius) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netStructLocomotionPathNodeFieldNames;
      if (hasVertex) {
        output.WriteMessage(1, field_names[0], Vertex);
      }
      if (hasVertexSideRadius) {
        output.WriteInt32(2, field_names[1], VertexSideRadius);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasVertex) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Vertex);
      }
      if (hasVertexSideRadius) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, VertexSideRadius);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetStructLocomotionPathNode ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructLocomotionPathNode ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructLocomotionPathNode ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructLocomotionPathNode ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructLocomotionPathNode ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructLocomotionPathNode ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetStructLocomotionPathNode ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetStructLocomotionPathNode ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetStructLocomotionPathNode ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructLocomotionPathNode ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetStructLocomotionPathNode MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetStructLocomotionPathNode prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetStructLocomotionPathNode, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetStructLocomotionPathNode cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetStructLocomotionPathNode result;
      
      private NetStructLocomotionPathNode PrepareBuilder() {
        if (resultIsReadOnly) {
          NetStructLocomotionPathNode original = result;
          result = new NetStructLocomotionPathNode();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetStructLocomotionPathNode MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.NetStructLocomotionPathNode.Descriptor; }
      }
      
      public override NetStructLocomotionPathNode DefaultInstanceForType {
        get { return global::Gazillion.NetStructLocomotionPathNode.DefaultInstance; }
      }
      
      public override NetStructLocomotionPathNode BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetStructLocomotionPathNode) {
          return MergeFrom((NetStructLocomotionPathNode) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetStructLocomotionPathNode other) {
        if (other == global::Gazillion.NetStructLocomotionPathNode.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasVertex) {
          MergeVertex(other.Vertex);
        }
        if (other.HasVertexSideRadius) {
          VertexSideRadius = other.VertexSideRadius;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netStructLocomotionPathNodeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netStructLocomotionPathNodeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::Gazillion.NetStructPoint3.Builder subBuilder = global::Gazillion.NetStructPoint3.CreateBuilder();
              if (result.hasVertex) {
                subBuilder.MergeFrom(Vertex);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Vertex = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasVertexSideRadius = input.ReadInt32(ref result.vertexSideRadius_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasVertex {
       get { return result.hasVertex; }
      }
      public global::Gazillion.NetStructPoint3 Vertex {
        get { return result.Vertex; }
        set { SetVertex(value); }
      }
      public Builder SetVertex(global::Gazillion.NetStructPoint3 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVertex = true;
        result.vertex_ = value;
        return this;
      }
      public Builder SetVertex(global::Gazillion.NetStructPoint3.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasVertex = true;
        result.vertex_ = builderForValue.Build();
        return this;
      }
      public Builder MergeVertex(global::Gazillion.NetStructPoint3 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasVertex &&
            result.vertex_ != global::Gazillion.NetStructPoint3.DefaultInstance) {
            result.vertex_ = global::Gazillion.NetStructPoint3.CreateBuilder(result.vertex_).MergeFrom(value).BuildPartial();
        } else {
          result.vertex_ = value;
        }
        result.hasVertex = true;
        return this;
      }
      public Builder ClearVertex() {
        PrepareBuilder();
        result.hasVertex = false;
        result.vertex_ = null;
        return this;
      }
      
      public bool HasVertexSideRadius {
        get { return result.hasVertexSideRadius; }
      }
      public int VertexSideRadius {
        get { return result.VertexSideRadius; }
        set { SetVertexSideRadius(value); }
      }
      public Builder SetVertexSideRadius(int value) {
        PrepareBuilder();
        result.hasVertexSideRadius = true;
        result.vertexSideRadius_ = value;
        return this;
      }
      public Builder ClearVertexSideRadius() {
        PrepareBuilder();
        result.hasVertexSideRadius = false;
        result.vertexSideRadius_ = 0;
        return this;
      }
    }
    static NetStructLocomotionPathNode() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetStructLocomotionState : pb::GeneratedMessage<NetStructLocomotionState, NetStructLocomotionState.Builder> {
    private NetStructLocomotionState() { }
    private static readonly NetStructLocomotionState defaultInstance = new NetStructLocomotionState().MakeReadOnly();
    private static readonly string[] _netStructLocomotionStateFieldNames = new string[] { "followentityid", "followentityrange", "height", "locomotionflags", "method", "movespeed", "pathgoalnodeindex", "pathnodes", "updatepathnodes" };
    private static readonly uint[] _netStructLocomotionStateFieldTags = new uint[] { 40, 53, 32, 8, 16, 29, 72, 66, 56 };
    public static NetStructLocomotionState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetStructLocomotionState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetStructLocomotionState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructLocomotionState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetStructLocomotionState, NetStructLocomotionState.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructLocomotionState__FieldAccessorTable; }
    }
    
    public const int LocomotionflagsFieldNumber = 1;
    private bool hasLocomotionflags;
    private uint locomotionflags_;
    public bool HasLocomotionflags {
      get { return hasLocomotionflags; }
    }
    public uint Locomotionflags {
      get { return locomotionflags_; }
    }
    
    public const int MethodFieldNumber = 2;
    private bool hasMethod;
    private int method_;
    public bool HasMethod {
      get { return hasMethod; }
    }
    public int Method {
      get { return method_; }
    }
    
    public const int MovespeedFieldNumber = 3;
    private bool hasMovespeed;
    private float movespeed_;
    public bool HasMovespeed {
      get { return hasMovespeed; }
    }
    public float Movespeed {
      get { return movespeed_; }
    }
    
    public const int HeightFieldNumber = 4;
    private bool hasHeight;
    private uint height_;
    public bool HasHeight {
      get { return hasHeight; }
    }
    public uint Height {
      get { return height_; }
    }
    
    public const int FollowentityidFieldNumber = 5;
    private bool hasFollowentityid;
    private ulong followentityid_;
    public bool HasFollowentityid {
      get { return hasFollowentityid; }
    }
    public ulong Followentityid {
      get { return followentityid_; }
    }
    
    public const int FollowentityrangeFieldNumber = 6;
    private bool hasFollowentityrange;
    private float followentityrange_;
    public bool HasFollowentityrange {
      get { return hasFollowentityrange; }
    }
    public float Followentityrange {
      get { return followentityrange_; }
    }
    
    public const int UpdatepathnodesFieldNumber = 7;
    private bool hasUpdatepathnodes;
    private bool updatepathnodes_;
    public bool HasUpdatepathnodes {
      get { return hasUpdatepathnodes; }
    }
    public bool Updatepathnodes {
      get { return updatepathnodes_; }
    }
    
    public const int PathnodesFieldNumber = 8;
    private pbc::PopsicleList<global::Gazillion.NetStructLocomotionPathNode> pathnodes_ = new pbc::PopsicleList<global::Gazillion.NetStructLocomotionPathNode>();
    public scg::IList<global::Gazillion.NetStructLocomotionPathNode> PathnodesList {
      get { return pathnodes_; }
    }
    public int PathnodesCount {
      get { return pathnodes_.Count; }
    }
    public global::Gazillion.NetStructLocomotionPathNode GetPathnodes(int index) {
      return pathnodes_[index];
    }
    
    public const int PathgoalnodeindexFieldNumber = 9;
    private bool hasPathgoalnodeindex;
    private int pathgoalnodeindex_;
    public bool HasPathgoalnodeindex {
      get { return hasPathgoalnodeindex; }
    }
    public int Pathgoalnodeindex {
      get { return pathgoalnodeindex_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUpdatepathnodes) return false;
        foreach (global::Gazillion.NetStructLocomotionPathNode element in PathnodesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netStructLocomotionStateFieldNames;
      if (hasLocomotionflags) {
        output.WriteUInt32(1, field_names[3], Locomotionflags);
      }
      if (hasMethod) {
        output.WriteInt32(2, field_names[4], Method);
      }
      if (hasMovespeed) {
        output.WriteFloat(3, field_names[5], Movespeed);
      }
      if (hasHeight) {
        output.WriteUInt32(4, field_names[2], Height);
      }
      if (hasFollowentityid) {
        output.WriteUInt64(5, field_names[0], Followentityid);
      }
      if (hasFollowentityrange) {
        output.WriteFloat(6, field_names[1], Followentityrange);
      }
      if (hasUpdatepathnodes) {
        output.WriteBool(7, field_names[8], Updatepathnodes);
      }
      if (pathnodes_.Count > 0) {
        output.WriteMessageArray(8, field_names[7], pathnodes_);
      }
      if (hasPathgoalnodeindex) {
        output.WriteInt32(9, field_names[6], Pathgoalnodeindex);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLocomotionflags) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Locomotionflags);
      }
      if (hasMethod) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Method);
      }
      if (hasMovespeed) {
        size += pb::CodedOutputStream.ComputeFloatSize(3, Movespeed);
      }
      if (hasHeight) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, Height);
      }
      if (hasFollowentityid) {
        size += pb::CodedOutputStream.ComputeUInt64Size(5, Followentityid);
      }
      if (hasFollowentityrange) {
        size += pb::CodedOutputStream.ComputeFloatSize(6, Followentityrange);
      }
      if (hasUpdatepathnodes) {
        size += pb::CodedOutputStream.ComputeBoolSize(7, Updatepathnodes);
      }
      foreach (global::Gazillion.NetStructLocomotionPathNode element in PathnodesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(8, element);
      }
      if (hasPathgoalnodeindex) {
        size += pb::CodedOutputStream.ComputeInt32Size(9, Pathgoalnodeindex);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetStructLocomotionState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructLocomotionState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructLocomotionState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructLocomotionState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructLocomotionState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructLocomotionState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetStructLocomotionState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetStructLocomotionState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetStructLocomotionState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructLocomotionState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetStructLocomotionState MakeReadOnly() {
      pathnodes_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetStructLocomotionState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetStructLocomotionState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetStructLocomotionState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetStructLocomotionState result;
      
      private NetStructLocomotionState PrepareBuilder() {
        if (resultIsReadOnly) {
          NetStructLocomotionState original = result;
          result = new NetStructLocomotionState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetStructLocomotionState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.NetStructLocomotionState.Descriptor; }
      }
      
      public override NetStructLocomotionState DefaultInstanceForType {
        get { return global::Gazillion.NetStructLocomotionState.DefaultInstance; }
      }
      
      public override NetStructLocomotionState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetStructLocomotionState) {
          return MergeFrom((NetStructLocomotionState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetStructLocomotionState other) {
        if (other == global::Gazillion.NetStructLocomotionState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLocomotionflags) {
          Locomotionflags = other.Locomotionflags;
        }
        if (other.HasMethod) {
          Method = other.Method;
        }
        if (other.HasMovespeed) {
          Movespeed = other.Movespeed;
        }
        if (other.HasHeight) {
          Height = other.Height;
        }
        if (other.HasFollowentityid) {
          Followentityid = other.Followentityid;
        }
        if (other.HasFollowentityrange) {
          Followentityrange = other.Followentityrange;
        }
        if (other.HasUpdatepathnodes) {
          Updatepathnodes = other.Updatepathnodes;
        }
        if (other.pathnodes_.Count != 0) {
          result.pathnodes_.Add(other.pathnodes_);
        }
        if (other.HasPathgoalnodeindex) {
          Pathgoalnodeindex = other.Pathgoalnodeindex;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netStructLocomotionStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netStructLocomotionStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasLocomotionflags = input.ReadUInt32(ref result.locomotionflags_);
              break;
            }
            case 16: {
              result.hasMethod = input.ReadInt32(ref result.method_);
              break;
            }
            case 29: {
              result.hasMovespeed = input.ReadFloat(ref result.movespeed_);
              break;
            }
            case 32: {
              result.hasHeight = input.ReadUInt32(ref result.height_);
              break;
            }
            case 40: {
              result.hasFollowentityid = input.ReadUInt64(ref result.followentityid_);
              break;
            }
            case 53: {
              result.hasFollowentityrange = input.ReadFloat(ref result.followentityrange_);
              break;
            }
            case 56: {
              result.hasUpdatepathnodes = input.ReadBool(ref result.updatepathnodes_);
              break;
            }
            case 66: {
              input.ReadMessageArray(tag, field_name, result.pathnodes_, global::Gazillion.NetStructLocomotionPathNode.DefaultInstance, extensionRegistry);
              break;
            }
            case 72: {
              result.hasPathgoalnodeindex = input.ReadInt32(ref result.pathgoalnodeindex_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLocomotionflags {
        get { return result.hasLocomotionflags; }
      }
      public uint Locomotionflags {
        get { return result.Locomotionflags; }
        set { SetLocomotionflags(value); }
      }
      public Builder SetLocomotionflags(uint value) {
        PrepareBuilder();
        result.hasLocomotionflags = true;
        result.locomotionflags_ = value;
        return this;
      }
      public Builder ClearLocomotionflags() {
        PrepareBuilder();
        result.hasLocomotionflags = false;
        result.locomotionflags_ = 0;
        return this;
      }
      
      public bool HasMethod {
        get { return result.hasMethod; }
      }
      public int Method {
        get { return result.Method; }
        set { SetMethod(value); }
      }
      public Builder SetMethod(int value) {
        PrepareBuilder();
        result.hasMethod = true;
        result.method_ = value;
        return this;
      }
      public Builder ClearMethod() {
        PrepareBuilder();
        result.hasMethod = false;
        result.method_ = 0;
        return this;
      }
      
      public bool HasMovespeed {
        get { return result.hasMovespeed; }
      }
      public float Movespeed {
        get { return result.Movespeed; }
        set { SetMovespeed(value); }
      }
      public Builder SetMovespeed(float value) {
        PrepareBuilder();
        result.hasMovespeed = true;
        result.movespeed_ = value;
        return this;
      }
      public Builder ClearMovespeed() {
        PrepareBuilder();
        result.hasMovespeed = false;
        result.movespeed_ = 0F;
        return this;
      }
      
      public bool HasHeight {
        get { return result.hasHeight; }
      }
      public uint Height {
        get { return result.Height; }
        set { SetHeight(value); }
      }
      public Builder SetHeight(uint value) {
        PrepareBuilder();
        result.hasHeight = true;
        result.height_ = value;
        return this;
      }
      public Builder ClearHeight() {
        PrepareBuilder();
        result.hasHeight = false;
        result.height_ = 0;
        return this;
      }
      
      public bool HasFollowentityid {
        get { return result.hasFollowentityid; }
      }
      public ulong Followentityid {
        get { return result.Followentityid; }
        set { SetFollowentityid(value); }
      }
      public Builder SetFollowentityid(ulong value) {
        PrepareBuilder();
        result.hasFollowentityid = true;
        result.followentityid_ = value;
        return this;
      }
      public Builder ClearFollowentityid() {
        PrepareBuilder();
        result.hasFollowentityid = false;
        result.followentityid_ = 0UL;
        return this;
      }
      
      public bool HasFollowentityrange {
        get { return result.hasFollowentityrange; }
      }
      public float Followentityrange {
        get { return result.Followentityrange; }
        set { SetFollowentityrange(value); }
      }
      public Builder SetFollowentityrange(float value) {
        PrepareBuilder();
        result.hasFollowentityrange = true;
        result.followentityrange_ = value;
        return this;
      }
      public Builder ClearFollowentityrange() {
        PrepareBuilder();
        result.hasFollowentityrange = false;
        result.followentityrange_ = 0F;
        return this;
      }
      
      public bool HasUpdatepathnodes {
        get { return result.hasUpdatepathnodes; }
      }
      public bool Updatepathnodes {
        get { return result.Updatepathnodes; }
        set { SetUpdatepathnodes(value); }
      }
      public Builder SetUpdatepathnodes(bool value) {
        PrepareBuilder();
        result.hasUpdatepathnodes = true;
        result.updatepathnodes_ = value;
        return this;
      }
      public Builder ClearUpdatepathnodes() {
        PrepareBuilder();
        result.hasUpdatepathnodes = false;
        result.updatepathnodes_ = false;
        return this;
      }
      
      public pbc::IPopsicleList<global::Gazillion.NetStructLocomotionPathNode> PathnodesList {
        get { return PrepareBuilder().pathnodes_; }
      }
      public int PathnodesCount {
        get { return result.PathnodesCount; }
      }
      public global::Gazillion.NetStructLocomotionPathNode GetPathnodes(int index) {
        return result.GetPathnodes(index);
      }
      public Builder SetPathnodes(int index, global::Gazillion.NetStructLocomotionPathNode value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pathnodes_[index] = value;
        return this;
      }
      public Builder SetPathnodes(int index, global::Gazillion.NetStructLocomotionPathNode.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pathnodes_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPathnodes(global::Gazillion.NetStructLocomotionPathNode value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.pathnodes_.Add(value);
        return this;
      }
      public Builder AddPathnodes(global::Gazillion.NetStructLocomotionPathNode.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.pathnodes_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePathnodes(scg::IEnumerable<global::Gazillion.NetStructLocomotionPathNode> values) {
        PrepareBuilder();
        result.pathnodes_.Add(values);
        return this;
      }
      public Builder ClearPathnodes() {
        PrepareBuilder();
        result.pathnodes_.Clear();
        return this;
      }
      
      public bool HasPathgoalnodeindex {
        get { return result.hasPathgoalnodeindex; }
      }
      public int Pathgoalnodeindex {
        get { return result.Pathgoalnodeindex; }
        set { SetPathgoalnodeindex(value); }
      }
      public Builder SetPathgoalnodeindex(int value) {
        PrepareBuilder();
        result.hasPathgoalnodeindex = true;
        result.pathgoalnodeindex_ = value;
        return this;
      }
      public Builder ClearPathgoalnodeindex() {
        PrepareBuilder();
        result.hasPathgoalnodeindex = false;
        result.pathgoalnodeindex_ = 0;
        return this;
      }
    }
    static NetStructLocomotionState() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetStructUniqueTransition : pb::GeneratedMessage<NetStructUniqueTransition, NetStructUniqueTransition.Builder> {
    private NetStructUniqueTransition() { }
    private static readonly NetStructUniqueTransition defaultInstance = new NetStructUniqueTransition().MakeReadOnly();
    private static readonly string[] _netStructUniqueTransitionFieldNames = new string[] { "areaProtoId", "cellProtoId", "entityProtoId", "regionId", "regionProtoId" };
    private static readonly uint[] _netStructUniqueTransitionFieldTags = new uint[] { 24, 32, 40, 8, 16 };
    public static NetStructUniqueTransition DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetStructUniqueTransition DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetStructUniqueTransition ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructUniqueTransition__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetStructUniqueTransition, NetStructUniqueTransition.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructUniqueTransition__FieldAccessorTable; }
    }
    
    public const int RegionIdFieldNumber = 1;
    private bool hasRegionId;
    private ulong regionId_;
    public bool HasRegionId {
      get { return hasRegionId; }
    }
    public ulong RegionId {
      get { return regionId_; }
    }
    
    public const int RegionProtoIdFieldNumber = 2;
    private bool hasRegionProtoId;
    private ulong regionProtoId_;
    public bool HasRegionProtoId {
      get { return hasRegionProtoId; }
    }
    public ulong RegionProtoId {
      get { return regionProtoId_; }
    }
    
    public const int AreaProtoIdFieldNumber = 3;
    private bool hasAreaProtoId;
    private ulong areaProtoId_;
    public bool HasAreaProtoId {
      get { return hasAreaProtoId; }
    }
    public ulong AreaProtoId {
      get { return areaProtoId_; }
    }
    
    public const int CellProtoIdFieldNumber = 4;
    private bool hasCellProtoId;
    private ulong cellProtoId_;
    public bool HasCellProtoId {
      get { return hasCellProtoId; }
    }
    public ulong CellProtoId {
      get { return cellProtoId_; }
    }
    
    public const int EntityProtoIdFieldNumber = 5;
    private bool hasEntityProtoId;
    private ulong entityProtoId_;
    public bool HasEntityProtoId {
      get { return hasEntityProtoId; }
    }
    public ulong EntityProtoId {
      get { return entityProtoId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRegionId) return false;
        if (!hasRegionProtoId) return false;
        if (!hasAreaProtoId) return false;
        if (!hasCellProtoId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netStructUniqueTransitionFieldNames;
      if (hasRegionId) {
        output.WriteUInt64(1, field_names[3], RegionId);
      }
      if (hasRegionProtoId) {
        output.WriteUInt64(2, field_names[4], RegionProtoId);
      }
      if (hasAreaProtoId) {
        output.WriteUInt64(3, field_names[0], AreaProtoId);
      }
      if (hasCellProtoId) {
        output.WriteUInt64(4, field_names[1], CellProtoId);
      }
      if (hasEntityProtoId) {
        output.WriteUInt64(5, field_names[2], EntityProtoId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRegionId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, RegionId);
      }
      if (hasRegionProtoId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, RegionProtoId);
      }
      if (hasAreaProtoId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, AreaProtoId);
      }
      if (hasCellProtoId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(4, CellProtoId);
      }
      if (hasEntityProtoId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(5, EntityProtoId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetStructUniqueTransition ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructUniqueTransition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructUniqueTransition ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructUniqueTransition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructUniqueTransition ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructUniqueTransition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetStructUniqueTransition ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetStructUniqueTransition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetStructUniqueTransition ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructUniqueTransition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetStructUniqueTransition MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetStructUniqueTransition prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetStructUniqueTransition, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetStructUniqueTransition cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetStructUniqueTransition result;
      
      private NetStructUniqueTransition PrepareBuilder() {
        if (resultIsReadOnly) {
          NetStructUniqueTransition original = result;
          result = new NetStructUniqueTransition();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetStructUniqueTransition MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.NetStructUniqueTransition.Descriptor; }
      }
      
      public override NetStructUniqueTransition DefaultInstanceForType {
        get { return global::Gazillion.NetStructUniqueTransition.DefaultInstance; }
      }
      
      public override NetStructUniqueTransition BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetStructUniqueTransition) {
          return MergeFrom((NetStructUniqueTransition) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetStructUniqueTransition other) {
        if (other == global::Gazillion.NetStructUniqueTransition.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRegionId) {
          RegionId = other.RegionId;
        }
        if (other.HasRegionProtoId) {
          RegionProtoId = other.RegionProtoId;
        }
        if (other.HasAreaProtoId) {
          AreaProtoId = other.AreaProtoId;
        }
        if (other.HasCellProtoId) {
          CellProtoId = other.CellProtoId;
        }
        if (other.HasEntityProtoId) {
          EntityProtoId = other.EntityProtoId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netStructUniqueTransitionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netStructUniqueTransitionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRegionId = input.ReadUInt64(ref result.regionId_);
              break;
            }
            case 16: {
              result.hasRegionProtoId = input.ReadUInt64(ref result.regionProtoId_);
              break;
            }
            case 24: {
              result.hasAreaProtoId = input.ReadUInt64(ref result.areaProtoId_);
              break;
            }
            case 32: {
              result.hasCellProtoId = input.ReadUInt64(ref result.cellProtoId_);
              break;
            }
            case 40: {
              result.hasEntityProtoId = input.ReadUInt64(ref result.entityProtoId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRegionId {
        get { return result.hasRegionId; }
      }
      public ulong RegionId {
        get { return result.RegionId; }
        set { SetRegionId(value); }
      }
      public Builder SetRegionId(ulong value) {
        PrepareBuilder();
        result.hasRegionId = true;
        result.regionId_ = value;
        return this;
      }
      public Builder ClearRegionId() {
        PrepareBuilder();
        result.hasRegionId = false;
        result.regionId_ = 0UL;
        return this;
      }
      
      public bool HasRegionProtoId {
        get { return result.hasRegionProtoId; }
      }
      public ulong RegionProtoId {
        get { return result.RegionProtoId; }
        set { SetRegionProtoId(value); }
      }
      public Builder SetRegionProtoId(ulong value) {
        PrepareBuilder();
        result.hasRegionProtoId = true;
        result.regionProtoId_ = value;
        return this;
      }
      public Builder ClearRegionProtoId() {
        PrepareBuilder();
        result.hasRegionProtoId = false;
        result.regionProtoId_ = 0UL;
        return this;
      }
      
      public bool HasAreaProtoId {
        get { return result.hasAreaProtoId; }
      }
      public ulong AreaProtoId {
        get { return result.AreaProtoId; }
        set { SetAreaProtoId(value); }
      }
      public Builder SetAreaProtoId(ulong value) {
        PrepareBuilder();
        result.hasAreaProtoId = true;
        result.areaProtoId_ = value;
        return this;
      }
      public Builder ClearAreaProtoId() {
        PrepareBuilder();
        result.hasAreaProtoId = false;
        result.areaProtoId_ = 0UL;
        return this;
      }
      
      public bool HasCellProtoId {
        get { return result.hasCellProtoId; }
      }
      public ulong CellProtoId {
        get { return result.CellProtoId; }
        set { SetCellProtoId(value); }
      }
      public Builder SetCellProtoId(ulong value) {
        PrepareBuilder();
        result.hasCellProtoId = true;
        result.cellProtoId_ = value;
        return this;
      }
      public Builder ClearCellProtoId() {
        PrepareBuilder();
        result.hasCellProtoId = false;
        result.cellProtoId_ = 0UL;
        return this;
      }
      
      public bool HasEntityProtoId {
        get { return result.hasEntityProtoId; }
      }
      public ulong EntityProtoId {
        get { return result.EntityProtoId; }
        set { SetEntityProtoId(value); }
      }
      public Builder SetEntityProtoId(ulong value) {
        PrepareBuilder();
        result.hasEntityProtoId = true;
        result.entityProtoId_ = value;
        return this;
      }
      public Builder ClearEntityProtoId() {
        PrepareBuilder();
        result.hasEntityProtoId = false;
        result.entityProtoId_ = 0UL;
        return this;
      }
    }
    static NetStructUniqueTransition() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetStructCreateRegionParams : pb::GeneratedMessage<NetStructCreateRegionParams, NetStructCreateRegionParams.Builder> {
    private NetStructCreateRegionParams() { }
    private static readonly NetStructCreateRegionParams defaultInstance = new NetStructCreateRegionParams().MakeReadOnly();
    private static readonly string[] _netStructCreateRegionParamsFieldNames = new string[] { "cheat", "difficultyProtoRef", "level", "levelIsOverride", "matchNumber", "originUniqueTransition" };
    private static readonly uint[] _netStructCreateRegionParamsFieldTags = new uint[] { 48, 32, 8, 24, 40, 18 };
    public static NetStructCreateRegionParams DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetStructCreateRegionParams DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetStructCreateRegionParams ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructCreateRegionParams__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetStructCreateRegionParams, NetStructCreateRegionParams.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructCreateRegionParams__FieldAccessorTable; }
    }
    
    public const int LevelFieldNumber = 1;
    private bool hasLevel;
    private uint level_;
    public bool HasLevel {
      get { return hasLevel; }
    }
    public uint Level {
      get { return level_; }
    }
    
    public const int OriginUniqueTransitionFieldNumber = 2;
    private bool hasOriginUniqueTransition;
    private global::Gazillion.NetStructUniqueTransition originUniqueTransition_;
    public bool HasOriginUniqueTransition {
      get { return hasOriginUniqueTransition; }
    }
    public global::Gazillion.NetStructUniqueTransition OriginUniqueTransition {
      get { return originUniqueTransition_ ?? global::Gazillion.NetStructUniqueTransition.DefaultInstance; }
    }
    
    public const int LevelIsOverrideFieldNumber = 3;
    private bool hasLevelIsOverride;
    private bool levelIsOverride_;
    public bool HasLevelIsOverride {
      get { return hasLevelIsOverride; }
    }
    public bool LevelIsOverride {
      get { return levelIsOverride_; }
    }
    
    public const int DifficultyProtoRefFieldNumber = 4;
    private bool hasDifficultyProtoRef;
    private ulong difficultyProtoRef_;
    public bool HasDifficultyProtoRef {
      get { return hasDifficultyProtoRef; }
    }
    public ulong DifficultyProtoRef {
      get { return difficultyProtoRef_; }
    }
    
    public const int MatchNumberFieldNumber = 5;
    private bool hasMatchNumber;
    private ulong matchNumber_;
    public bool HasMatchNumber {
      get { return hasMatchNumber; }
    }
    public ulong MatchNumber {
      get { return matchNumber_; }
    }
    
    public const int CheatFieldNumber = 6;
    private bool hasCheat;
    private bool cheat_;
    public bool HasCheat {
      get { return hasCheat; }
    }
    public bool Cheat {
      get { return cheat_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLevel) return false;
        if (HasOriginUniqueTransition) {
          if (!OriginUniqueTransition.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netStructCreateRegionParamsFieldNames;
      if (hasLevel) {
        output.WriteUInt32(1, field_names[2], Level);
      }
      if (hasOriginUniqueTransition) {
        output.WriteMessage(2, field_names[5], OriginUniqueTransition);
      }
      if (hasLevelIsOverride) {
        output.WriteBool(3, field_names[3], LevelIsOverride);
      }
      if (hasDifficultyProtoRef) {
        output.WriteUInt64(4, field_names[1], DifficultyProtoRef);
      }
      if (hasMatchNumber) {
        output.WriteUInt64(5, field_names[4], MatchNumber);
      }
      if (hasCheat) {
        output.WriteBool(6, field_names[0], Cheat);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLevel) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Level);
      }
      if (hasOriginUniqueTransition) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, OriginUniqueTransition);
      }
      if (hasLevelIsOverride) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, LevelIsOverride);
      }
      if (hasDifficultyProtoRef) {
        size += pb::CodedOutputStream.ComputeUInt64Size(4, DifficultyProtoRef);
      }
      if (hasMatchNumber) {
        size += pb::CodedOutputStream.ComputeUInt64Size(5, MatchNumber);
      }
      if (hasCheat) {
        size += pb::CodedOutputStream.ComputeBoolSize(6, Cheat);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetStructCreateRegionParams ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructCreateRegionParams ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructCreateRegionParams ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructCreateRegionParams ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructCreateRegionParams ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructCreateRegionParams ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetStructCreateRegionParams ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetStructCreateRegionParams ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetStructCreateRegionParams ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructCreateRegionParams ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetStructCreateRegionParams MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetStructCreateRegionParams prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetStructCreateRegionParams, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetStructCreateRegionParams cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetStructCreateRegionParams result;
      
      private NetStructCreateRegionParams PrepareBuilder() {
        if (resultIsReadOnly) {
          NetStructCreateRegionParams original = result;
          result = new NetStructCreateRegionParams();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetStructCreateRegionParams MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.NetStructCreateRegionParams.Descriptor; }
      }
      
      public override NetStructCreateRegionParams DefaultInstanceForType {
        get { return global::Gazillion.NetStructCreateRegionParams.DefaultInstance; }
      }
      
      public override NetStructCreateRegionParams BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetStructCreateRegionParams) {
          return MergeFrom((NetStructCreateRegionParams) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetStructCreateRegionParams other) {
        if (other == global::Gazillion.NetStructCreateRegionParams.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLevel) {
          Level = other.Level;
        }
        if (other.HasOriginUniqueTransition) {
          MergeOriginUniqueTransition(other.OriginUniqueTransition);
        }
        if (other.HasLevelIsOverride) {
          LevelIsOverride = other.LevelIsOverride;
        }
        if (other.HasDifficultyProtoRef) {
          DifficultyProtoRef = other.DifficultyProtoRef;
        }
        if (other.HasMatchNumber) {
          MatchNumber = other.MatchNumber;
        }
        if (other.HasCheat) {
          Cheat = other.Cheat;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netStructCreateRegionParamsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netStructCreateRegionParamsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasLevel = input.ReadUInt32(ref result.level_);
              break;
            }
            case 18: {
              global::Gazillion.NetStructUniqueTransition.Builder subBuilder = global::Gazillion.NetStructUniqueTransition.CreateBuilder();
              if (result.hasOriginUniqueTransition) {
                subBuilder.MergeFrom(OriginUniqueTransition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OriginUniqueTransition = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasLevelIsOverride = input.ReadBool(ref result.levelIsOverride_);
              break;
            }
            case 32: {
              result.hasDifficultyProtoRef = input.ReadUInt64(ref result.difficultyProtoRef_);
              break;
            }
            case 40: {
              result.hasMatchNumber = input.ReadUInt64(ref result.matchNumber_);
              break;
            }
            case 48: {
              result.hasCheat = input.ReadBool(ref result.cheat_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLevel {
        get { return result.hasLevel; }
      }
      public uint Level {
        get { return result.Level; }
        set { SetLevel(value); }
      }
      public Builder SetLevel(uint value) {
        PrepareBuilder();
        result.hasLevel = true;
        result.level_ = value;
        return this;
      }
      public Builder ClearLevel() {
        PrepareBuilder();
        result.hasLevel = false;
        result.level_ = 0;
        return this;
      }
      
      public bool HasOriginUniqueTransition {
       get { return result.hasOriginUniqueTransition; }
      }
      public global::Gazillion.NetStructUniqueTransition OriginUniqueTransition {
        get { return result.OriginUniqueTransition; }
        set { SetOriginUniqueTransition(value); }
      }
      public Builder SetOriginUniqueTransition(global::Gazillion.NetStructUniqueTransition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOriginUniqueTransition = true;
        result.originUniqueTransition_ = value;
        return this;
      }
      public Builder SetOriginUniqueTransition(global::Gazillion.NetStructUniqueTransition.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOriginUniqueTransition = true;
        result.originUniqueTransition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOriginUniqueTransition(global::Gazillion.NetStructUniqueTransition value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOriginUniqueTransition &&
            result.originUniqueTransition_ != global::Gazillion.NetStructUniqueTransition.DefaultInstance) {
            result.originUniqueTransition_ = global::Gazillion.NetStructUniqueTransition.CreateBuilder(result.originUniqueTransition_).MergeFrom(value).BuildPartial();
        } else {
          result.originUniqueTransition_ = value;
        }
        result.hasOriginUniqueTransition = true;
        return this;
      }
      public Builder ClearOriginUniqueTransition() {
        PrepareBuilder();
        result.hasOriginUniqueTransition = false;
        result.originUniqueTransition_ = null;
        return this;
      }
      
      public bool HasLevelIsOverride {
        get { return result.hasLevelIsOverride; }
      }
      public bool LevelIsOverride {
        get { return result.LevelIsOverride; }
        set { SetLevelIsOverride(value); }
      }
      public Builder SetLevelIsOverride(bool value) {
        PrepareBuilder();
        result.hasLevelIsOverride = true;
        result.levelIsOverride_ = value;
        return this;
      }
      public Builder ClearLevelIsOverride() {
        PrepareBuilder();
        result.hasLevelIsOverride = false;
        result.levelIsOverride_ = false;
        return this;
      }
      
      public bool HasDifficultyProtoRef {
        get { return result.hasDifficultyProtoRef; }
      }
      public ulong DifficultyProtoRef {
        get { return result.DifficultyProtoRef; }
        set { SetDifficultyProtoRef(value); }
      }
      public Builder SetDifficultyProtoRef(ulong value) {
        PrepareBuilder();
        result.hasDifficultyProtoRef = true;
        result.difficultyProtoRef_ = value;
        return this;
      }
      public Builder ClearDifficultyProtoRef() {
        PrepareBuilder();
        result.hasDifficultyProtoRef = false;
        result.difficultyProtoRef_ = 0UL;
        return this;
      }
      
      public bool HasMatchNumber {
        get { return result.hasMatchNumber; }
      }
      public ulong MatchNumber {
        get { return result.MatchNumber; }
        set { SetMatchNumber(value); }
      }
      public Builder SetMatchNumber(ulong value) {
        PrepareBuilder();
        result.hasMatchNumber = true;
        result.matchNumber_ = value;
        return this;
      }
      public Builder ClearMatchNumber() {
        PrepareBuilder();
        result.hasMatchNumber = false;
        result.matchNumber_ = 0UL;
        return this;
      }
      
      public bool HasCheat {
        get { return result.hasCheat; }
      }
      public bool Cheat {
        get { return result.Cheat; }
        set { SetCheat(value); }
      }
      public Builder SetCheat(bool value) {
        PrepareBuilder();
        result.hasCheat = true;
        result.cheat_ = value;
        return this;
      }
      public Builder ClearCheat() {
        PrepareBuilder();
        result.hasCheat = false;
        result.cheat_ = false;
        return this;
      }
    }
    static NetStructCreateRegionParams() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetStructModChangeObject : pb::GeneratedMessage<NetStructModChangeObject, NetStructModChangeObject.Builder> {
    private NetStructModChangeObject() { }
    private static readonly NetStructModChangeObject defaultInstance = new NetStructModChangeObject().MakeReadOnly();
    private static readonly string[] _netStructModChangeObjectFieldNames = new string[] { "change", "mod" };
    private static readonly uint[] _netStructModChangeObjectFieldTags = new uint[] { 16, 8 };
    public static NetStructModChangeObject DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetStructModChangeObject DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetStructModChangeObject ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructModChangeObject__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetStructModChangeObject, NetStructModChangeObject.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructModChangeObject__FieldAccessorTable; }
    }
    
    public const int ModFieldNumber = 1;
    private bool hasMod;
    private ulong mod_;
    public bool HasMod {
      get { return hasMod; }
    }
    public ulong Mod {
      get { return mod_; }
    }
    
    public const int ChangeFieldNumber = 2;
    private bool hasChange;
    private uint change_;
    public bool HasChange {
      get { return hasChange; }
    }
    public uint Change {
      get { return change_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMod) return false;
        if (!hasChange) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netStructModChangeObjectFieldNames;
      if (hasMod) {
        output.WriteUInt64(1, field_names[1], Mod);
      }
      if (hasChange) {
        output.WriteUInt32(2, field_names[0], Change);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMod) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, Mod);
      }
      if (hasChange) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Change);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetStructModChangeObject ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructModChangeObject ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructModChangeObject ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructModChangeObject ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructModChangeObject ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructModChangeObject ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetStructModChangeObject ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetStructModChangeObject ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetStructModChangeObject ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructModChangeObject ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetStructModChangeObject MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetStructModChangeObject prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetStructModChangeObject, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetStructModChangeObject cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetStructModChangeObject result;
      
      private NetStructModChangeObject PrepareBuilder() {
        if (resultIsReadOnly) {
          NetStructModChangeObject original = result;
          result = new NetStructModChangeObject();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetStructModChangeObject MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.NetStructModChangeObject.Descriptor; }
      }
      
      public override NetStructModChangeObject DefaultInstanceForType {
        get { return global::Gazillion.NetStructModChangeObject.DefaultInstance; }
      }
      
      public override NetStructModChangeObject BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetStructModChangeObject) {
          return MergeFrom((NetStructModChangeObject) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetStructModChangeObject other) {
        if (other == global::Gazillion.NetStructModChangeObject.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMod) {
          Mod = other.Mod;
        }
        if (other.HasChange) {
          Change = other.Change;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netStructModChangeObjectFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netStructModChangeObjectFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMod = input.ReadUInt64(ref result.mod_);
              break;
            }
            case 16: {
              result.hasChange = input.ReadUInt32(ref result.change_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMod {
        get { return result.hasMod; }
      }
      public ulong Mod {
        get { return result.Mod; }
        set { SetMod(value); }
      }
      public Builder SetMod(ulong value) {
        PrepareBuilder();
        result.hasMod = true;
        result.mod_ = value;
        return this;
      }
      public Builder ClearMod() {
        PrepareBuilder();
        result.hasMod = false;
        result.mod_ = 0UL;
        return this;
      }
      
      public bool HasChange {
        get { return result.hasChange; }
      }
      public uint Change {
        get { return result.Change; }
        set { SetChange(value); }
      }
      public Builder SetChange(uint value) {
        PrepareBuilder();
        result.hasChange = true;
        result.change_ = value;
        return this;
      }
      public Builder ClearChange() {
        PrepareBuilder();
        result.hasChange = false;
        result.change_ = 0;
        return this;
      }
    }
    static NetStructModChangeObject() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetStructPowerPointAllocation : pb::GeneratedMessage<NetStructPowerPointAllocation, NetStructPowerPointAllocation.Builder> {
    private NetStructPowerPointAllocation() { }
    private static readonly NetStructPowerPointAllocation defaultInstance = new NetStructPowerPointAllocation().MakeReadOnly();
    private static readonly string[] _netStructPowerPointAllocationFieldNames = new string[] { "delta", "powerProtoId" };
    private static readonly uint[] _netStructPowerPointAllocationFieldTags = new uint[] { 16, 8 };
    public static NetStructPowerPointAllocation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetStructPowerPointAllocation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetStructPowerPointAllocation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructPowerPointAllocation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetStructPowerPointAllocation, NetStructPowerPointAllocation.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructPowerPointAllocation__FieldAccessorTable; }
    }
    
    public const int PowerProtoIdFieldNumber = 1;
    private bool hasPowerProtoId;
    private ulong powerProtoId_;
    public bool HasPowerProtoId {
      get { return hasPowerProtoId; }
    }
    public ulong PowerProtoId {
      get { return powerProtoId_; }
    }
    
    public const int DeltaFieldNumber = 2;
    private bool hasDelta;
    private uint delta_;
    public bool HasDelta {
      get { return hasDelta; }
    }
    public uint Delta {
      get { return delta_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPowerProtoId) return false;
        if (!hasDelta) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netStructPowerPointAllocationFieldNames;
      if (hasPowerProtoId) {
        output.WriteUInt64(1, field_names[1], PowerProtoId);
      }
      if (hasDelta) {
        output.WriteUInt32(2, field_names[0], Delta);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPowerProtoId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, PowerProtoId);
      }
      if (hasDelta) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Delta);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetStructPowerPointAllocation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructPowerPointAllocation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructPowerPointAllocation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructPowerPointAllocation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructPowerPointAllocation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructPowerPointAllocation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetStructPowerPointAllocation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetStructPowerPointAllocation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetStructPowerPointAllocation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructPowerPointAllocation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetStructPowerPointAllocation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetStructPowerPointAllocation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetStructPowerPointAllocation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetStructPowerPointAllocation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetStructPowerPointAllocation result;
      
      private NetStructPowerPointAllocation PrepareBuilder() {
        if (resultIsReadOnly) {
          NetStructPowerPointAllocation original = result;
          result = new NetStructPowerPointAllocation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetStructPowerPointAllocation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.NetStructPowerPointAllocation.Descriptor; }
      }
      
      public override NetStructPowerPointAllocation DefaultInstanceForType {
        get { return global::Gazillion.NetStructPowerPointAllocation.DefaultInstance; }
      }
      
      public override NetStructPowerPointAllocation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetStructPowerPointAllocation) {
          return MergeFrom((NetStructPowerPointAllocation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetStructPowerPointAllocation other) {
        if (other == global::Gazillion.NetStructPowerPointAllocation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPowerProtoId) {
          PowerProtoId = other.PowerProtoId;
        }
        if (other.HasDelta) {
          Delta = other.Delta;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netStructPowerPointAllocationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netStructPowerPointAllocationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasPowerProtoId = input.ReadUInt64(ref result.powerProtoId_);
              break;
            }
            case 16: {
              result.hasDelta = input.ReadUInt32(ref result.delta_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPowerProtoId {
        get { return result.hasPowerProtoId; }
      }
      public ulong PowerProtoId {
        get { return result.PowerProtoId; }
        set { SetPowerProtoId(value); }
      }
      public Builder SetPowerProtoId(ulong value) {
        PrepareBuilder();
        result.hasPowerProtoId = true;
        result.powerProtoId_ = value;
        return this;
      }
      public Builder ClearPowerProtoId() {
        PrepareBuilder();
        result.hasPowerProtoId = false;
        result.powerProtoId_ = 0UL;
        return this;
      }
      
      public bool HasDelta {
        get { return result.hasDelta; }
      }
      public uint Delta {
        get { return result.Delta; }
        set { SetDelta(value); }
      }
      public Builder SetDelta(uint value) {
        PrepareBuilder();
        result.hasDelta = true;
        result.delta_ = value;
        return this;
      }
      public Builder ClearDelta() {
        PrepareBuilder();
        result.hasDelta = false;
        result.delta_ = 0;
        return this;
      }
    }
    static NetStructPowerPointAllocation() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetStructWarpDest : pb::GeneratedMessage<NetStructWarpDest, NetStructWarpDest.Builder> {
    private NetStructWarpDest() { }
    private static readonly NetStructWarpDest defaultInstance = new NetStructWarpDest().MakeReadOnly();
    private static readonly string[] _netStructWarpDestFieldNames = new string[] { "DestAreaPrototypeId", "DestEntityDbId", "DestPosition", "DestRegionConnectionTargetPrototypeId", "DestRegionId", "DestRegionPrototypeId", "DestStoryWarpPrototypeId", "TransferId" };
    private static readonly uint[] _netStructWarpDestFieldTags = new uint[] { 48, 24, 34, 56, 16, 8, 64, 40 };
    public static NetStructWarpDest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetStructWarpDest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetStructWarpDest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructWarpDest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetStructWarpDest, NetStructWarpDest.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructWarpDest__FieldAccessorTable; }
    }
    
    public const int DestRegionPrototypeIdFieldNumber = 1;
    private bool hasDestRegionPrototypeId;
    private ulong destRegionPrototypeId_;
    public bool HasDestRegionPrototypeId {
      get { return hasDestRegionPrototypeId; }
    }
    public ulong DestRegionPrototypeId {
      get { return destRegionPrototypeId_; }
    }
    
    public const int DestRegionIdFieldNumber = 2;
    private bool hasDestRegionId;
    private ulong destRegionId_;
    public bool HasDestRegionId {
      get { return hasDestRegionId; }
    }
    public ulong DestRegionId {
      get { return destRegionId_; }
    }
    
    public const int DestEntityDbIdFieldNumber = 3;
    private bool hasDestEntityDbId;
    private ulong destEntityDbId_;
    public bool HasDestEntityDbId {
      get { return hasDestEntityDbId; }
    }
    public ulong DestEntityDbId {
      get { return destEntityDbId_; }
    }
    
    public const int DestPositionFieldNumber = 4;
    private bool hasDestPosition;
    private global::Gazillion.NetStructPoint3 destPosition_;
    public bool HasDestPosition {
      get { return hasDestPosition; }
    }
    public global::Gazillion.NetStructPoint3 DestPosition {
      get { return destPosition_ ?? global::Gazillion.NetStructPoint3.DefaultInstance; }
    }
    
    public const int TransferIdFieldNumber = 5;
    private bool hasTransferId;
    private ulong transferId_;
    public bool HasTransferId {
      get { return hasTransferId; }
    }
    public ulong TransferId {
      get { return transferId_; }
    }
    
    public const int DestAreaPrototypeIdFieldNumber = 6;
    private bool hasDestAreaPrototypeId;
    private ulong destAreaPrototypeId_;
    public bool HasDestAreaPrototypeId {
      get { return hasDestAreaPrototypeId; }
    }
    public ulong DestAreaPrototypeId {
      get { return destAreaPrototypeId_; }
    }
    
    public const int DestRegionConnectionTargetPrototypeIdFieldNumber = 7;
    private bool hasDestRegionConnectionTargetPrototypeId;
    private ulong destRegionConnectionTargetPrototypeId_;
    public bool HasDestRegionConnectionTargetPrototypeId {
      get { return hasDestRegionConnectionTargetPrototypeId; }
    }
    public ulong DestRegionConnectionTargetPrototypeId {
      get { return destRegionConnectionTargetPrototypeId_; }
    }
    
    public const int DestStoryWarpPrototypeIdFieldNumber = 8;
    private bool hasDestStoryWarpPrototypeId;
    private ulong destStoryWarpPrototypeId_;
    public bool HasDestStoryWarpPrototypeId {
      get { return hasDestStoryWarpPrototypeId; }
    }
    public ulong DestStoryWarpPrototypeId {
      get { return destStoryWarpPrototypeId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasDestRegionPrototypeId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netStructWarpDestFieldNames;
      if (hasDestRegionPrototypeId) {
        output.WriteUInt64(1, field_names[5], DestRegionPrototypeId);
      }
      if (hasDestRegionId) {
        output.WriteUInt64(2, field_names[4], DestRegionId);
      }
      if (hasDestEntityDbId) {
        output.WriteUInt64(3, field_names[1], DestEntityDbId);
      }
      if (hasDestPosition) {
        output.WriteMessage(4, field_names[2], DestPosition);
      }
      if (hasTransferId) {
        output.WriteUInt64(5, field_names[7], TransferId);
      }
      if (hasDestAreaPrototypeId) {
        output.WriteUInt64(6, field_names[0], DestAreaPrototypeId);
      }
      if (hasDestRegionConnectionTargetPrototypeId) {
        output.WriteUInt64(7, field_names[3], DestRegionConnectionTargetPrototypeId);
      }
      if (hasDestStoryWarpPrototypeId) {
        output.WriteUInt64(8, field_names[6], DestStoryWarpPrototypeId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDestRegionPrototypeId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, DestRegionPrototypeId);
      }
      if (hasDestRegionId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, DestRegionId);
      }
      if (hasDestEntityDbId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, DestEntityDbId);
      }
      if (hasDestPosition) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, DestPosition);
      }
      if (hasTransferId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(5, TransferId);
      }
      if (hasDestAreaPrototypeId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(6, DestAreaPrototypeId);
      }
      if (hasDestRegionConnectionTargetPrototypeId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(7, DestRegionConnectionTargetPrototypeId);
      }
      if (hasDestStoryWarpPrototypeId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(8, DestStoryWarpPrototypeId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetStructWarpDest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructWarpDest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructWarpDest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructWarpDest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructWarpDest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructWarpDest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetStructWarpDest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetStructWarpDest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetStructWarpDest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructWarpDest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetStructWarpDest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetStructWarpDest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetStructWarpDest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetStructWarpDest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetStructWarpDest result;
      
      private NetStructWarpDest PrepareBuilder() {
        if (resultIsReadOnly) {
          NetStructWarpDest original = result;
          result = new NetStructWarpDest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetStructWarpDest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.NetStructWarpDest.Descriptor; }
      }
      
      public override NetStructWarpDest DefaultInstanceForType {
        get { return global::Gazillion.NetStructWarpDest.DefaultInstance; }
      }
      
      public override NetStructWarpDest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetStructWarpDest) {
          return MergeFrom((NetStructWarpDest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetStructWarpDest other) {
        if (other == global::Gazillion.NetStructWarpDest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDestRegionPrototypeId) {
          DestRegionPrototypeId = other.DestRegionPrototypeId;
        }
        if (other.HasDestRegionId) {
          DestRegionId = other.DestRegionId;
        }
        if (other.HasDestEntityDbId) {
          DestEntityDbId = other.DestEntityDbId;
        }
        if (other.HasDestPosition) {
          MergeDestPosition(other.DestPosition);
        }
        if (other.HasTransferId) {
          TransferId = other.TransferId;
        }
        if (other.HasDestAreaPrototypeId) {
          DestAreaPrototypeId = other.DestAreaPrototypeId;
        }
        if (other.HasDestRegionConnectionTargetPrototypeId) {
          DestRegionConnectionTargetPrototypeId = other.DestRegionConnectionTargetPrototypeId;
        }
        if (other.HasDestStoryWarpPrototypeId) {
          DestStoryWarpPrototypeId = other.DestStoryWarpPrototypeId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netStructWarpDestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netStructWarpDestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasDestRegionPrototypeId = input.ReadUInt64(ref result.destRegionPrototypeId_);
              break;
            }
            case 16: {
              result.hasDestRegionId = input.ReadUInt64(ref result.destRegionId_);
              break;
            }
            case 24: {
              result.hasDestEntityDbId = input.ReadUInt64(ref result.destEntityDbId_);
              break;
            }
            case 34: {
              global::Gazillion.NetStructPoint3.Builder subBuilder = global::Gazillion.NetStructPoint3.CreateBuilder();
              if (result.hasDestPosition) {
                subBuilder.MergeFrom(DestPosition);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              DestPosition = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              result.hasTransferId = input.ReadUInt64(ref result.transferId_);
              break;
            }
            case 48: {
              result.hasDestAreaPrototypeId = input.ReadUInt64(ref result.destAreaPrototypeId_);
              break;
            }
            case 56: {
              result.hasDestRegionConnectionTargetPrototypeId = input.ReadUInt64(ref result.destRegionConnectionTargetPrototypeId_);
              break;
            }
            case 64: {
              result.hasDestStoryWarpPrototypeId = input.ReadUInt64(ref result.destStoryWarpPrototypeId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDestRegionPrototypeId {
        get { return result.hasDestRegionPrototypeId; }
      }
      public ulong DestRegionPrototypeId {
        get { return result.DestRegionPrototypeId; }
        set { SetDestRegionPrototypeId(value); }
      }
      public Builder SetDestRegionPrototypeId(ulong value) {
        PrepareBuilder();
        result.hasDestRegionPrototypeId = true;
        result.destRegionPrototypeId_ = value;
        return this;
      }
      public Builder ClearDestRegionPrototypeId() {
        PrepareBuilder();
        result.hasDestRegionPrototypeId = false;
        result.destRegionPrototypeId_ = 0UL;
        return this;
      }
      
      public bool HasDestRegionId {
        get { return result.hasDestRegionId; }
      }
      public ulong DestRegionId {
        get { return result.DestRegionId; }
        set { SetDestRegionId(value); }
      }
      public Builder SetDestRegionId(ulong value) {
        PrepareBuilder();
        result.hasDestRegionId = true;
        result.destRegionId_ = value;
        return this;
      }
      public Builder ClearDestRegionId() {
        PrepareBuilder();
        result.hasDestRegionId = false;
        result.destRegionId_ = 0UL;
        return this;
      }
      
      public bool HasDestEntityDbId {
        get { return result.hasDestEntityDbId; }
      }
      public ulong DestEntityDbId {
        get { return result.DestEntityDbId; }
        set { SetDestEntityDbId(value); }
      }
      public Builder SetDestEntityDbId(ulong value) {
        PrepareBuilder();
        result.hasDestEntityDbId = true;
        result.destEntityDbId_ = value;
        return this;
      }
      public Builder ClearDestEntityDbId() {
        PrepareBuilder();
        result.hasDestEntityDbId = false;
        result.destEntityDbId_ = 0UL;
        return this;
      }
      
      public bool HasDestPosition {
       get { return result.hasDestPosition; }
      }
      public global::Gazillion.NetStructPoint3 DestPosition {
        get { return result.DestPosition; }
        set { SetDestPosition(value); }
      }
      public Builder SetDestPosition(global::Gazillion.NetStructPoint3 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDestPosition = true;
        result.destPosition_ = value;
        return this;
      }
      public Builder SetDestPosition(global::Gazillion.NetStructPoint3.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDestPosition = true;
        result.destPosition_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDestPosition(global::Gazillion.NetStructPoint3 value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDestPosition &&
            result.destPosition_ != global::Gazillion.NetStructPoint3.DefaultInstance) {
            result.destPosition_ = global::Gazillion.NetStructPoint3.CreateBuilder(result.destPosition_).MergeFrom(value).BuildPartial();
        } else {
          result.destPosition_ = value;
        }
        result.hasDestPosition = true;
        return this;
      }
      public Builder ClearDestPosition() {
        PrepareBuilder();
        result.hasDestPosition = false;
        result.destPosition_ = null;
        return this;
      }
      
      public bool HasTransferId {
        get { return result.hasTransferId; }
      }
      public ulong TransferId {
        get { return result.TransferId; }
        set { SetTransferId(value); }
      }
      public Builder SetTransferId(ulong value) {
        PrepareBuilder();
        result.hasTransferId = true;
        result.transferId_ = value;
        return this;
      }
      public Builder ClearTransferId() {
        PrepareBuilder();
        result.hasTransferId = false;
        result.transferId_ = 0UL;
        return this;
      }
      
      public bool HasDestAreaPrototypeId {
        get { return result.hasDestAreaPrototypeId; }
      }
      public ulong DestAreaPrototypeId {
        get { return result.DestAreaPrototypeId; }
        set { SetDestAreaPrototypeId(value); }
      }
      public Builder SetDestAreaPrototypeId(ulong value) {
        PrepareBuilder();
        result.hasDestAreaPrototypeId = true;
        result.destAreaPrototypeId_ = value;
        return this;
      }
      public Builder ClearDestAreaPrototypeId() {
        PrepareBuilder();
        result.hasDestAreaPrototypeId = false;
        result.destAreaPrototypeId_ = 0UL;
        return this;
      }
      
      public bool HasDestRegionConnectionTargetPrototypeId {
        get { return result.hasDestRegionConnectionTargetPrototypeId; }
      }
      public ulong DestRegionConnectionTargetPrototypeId {
        get { return result.DestRegionConnectionTargetPrototypeId; }
        set { SetDestRegionConnectionTargetPrototypeId(value); }
      }
      public Builder SetDestRegionConnectionTargetPrototypeId(ulong value) {
        PrepareBuilder();
        result.hasDestRegionConnectionTargetPrototypeId = true;
        result.destRegionConnectionTargetPrototypeId_ = value;
        return this;
      }
      public Builder ClearDestRegionConnectionTargetPrototypeId() {
        PrepareBuilder();
        result.hasDestRegionConnectionTargetPrototypeId = false;
        result.destRegionConnectionTargetPrototypeId_ = 0UL;
        return this;
      }
      
      public bool HasDestStoryWarpPrototypeId {
        get { return result.hasDestStoryWarpPrototypeId; }
      }
      public ulong DestStoryWarpPrototypeId {
        get { return result.DestStoryWarpPrototypeId; }
        set { SetDestStoryWarpPrototypeId(value); }
      }
      public Builder SetDestStoryWarpPrototypeId(ulong value) {
        PrepareBuilder();
        result.hasDestStoryWarpPrototypeId = true;
        result.destStoryWarpPrototypeId_ = value;
        return this;
      }
      public Builder ClearDestStoryWarpPrototypeId() {
        PrepareBuilder();
        result.hasDestStoryWarpPrototypeId = false;
        result.destStoryWarpPrototypeId_ = 0UL;
        return this;
      }
    }
    static NetStructWarpDest() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CommunityMemberBroadcast : pb::GeneratedMessage<CommunityMemberBroadcast, CommunityMemberBroadcast.Builder> {
    private CommunityMemberBroadcast() { }
    private static readonly CommunityMemberBroadcast defaultInstance = new CommunityMemberBroadcast().MakeReadOnly();
    private static readonly string[] _communityMemberBroadcastFieldNames = new string[] { "currentAvatarRefId", "currentCharacterLevel", "currentPvpFactionRefId", "currentRegionRefId", "memberPlayerDbId" };
    private static readonly uint[] _communityMemberBroadcastFieldTags = new uint[] { 24, 32, 40, 16, 8 };
    public static CommunityMemberBroadcast DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CommunityMemberBroadcast DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CommunityMemberBroadcast ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_CommunityMemberBroadcast__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CommunityMemberBroadcast, CommunityMemberBroadcast.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_CommunityMemberBroadcast__FieldAccessorTable; }
    }
    
    public const int MemberPlayerDbIdFieldNumber = 1;
    private bool hasMemberPlayerDbId;
    private ulong memberPlayerDbId_;
    public bool HasMemberPlayerDbId {
      get { return hasMemberPlayerDbId; }
    }
    public ulong MemberPlayerDbId {
      get { return memberPlayerDbId_; }
    }
    
    public const int CurrentRegionRefIdFieldNumber = 2;
    private bool hasCurrentRegionRefId;
    private ulong currentRegionRefId_ = 123UL;
    public bool HasCurrentRegionRefId {
      get { return hasCurrentRegionRefId; }
    }
    public ulong CurrentRegionRefId {
      get { return currentRegionRefId_; }
    }
    
    public const int CurrentAvatarRefIdFieldNumber = 3;
    private bool hasCurrentAvatarRefId;
    private ulong currentAvatarRefId_ = 123UL;
    public bool HasCurrentAvatarRefId {
      get { return hasCurrentAvatarRefId; }
    }
    public ulong CurrentAvatarRefId {
      get { return currentAvatarRefId_; }
    }
    
    public const int CurrentCharacterLevelFieldNumber = 4;
    private bool hasCurrentCharacterLevel;
    private ulong currentCharacterLevel_;
    public bool HasCurrentCharacterLevel {
      get { return hasCurrentCharacterLevel; }
    }
    public ulong CurrentCharacterLevel {
      get { return currentCharacterLevel_; }
    }
    
    public const int CurrentPvpFactionRefIdFieldNumber = 5;
    private bool hasCurrentPvpFactionRefId;
    private ulong currentPvpFactionRefId_;
    public bool HasCurrentPvpFactionRefId {
      get { return hasCurrentPvpFactionRefId; }
    }
    public ulong CurrentPvpFactionRefId {
      get { return currentPvpFactionRefId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMemberPlayerDbId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _communityMemberBroadcastFieldNames;
      if (hasMemberPlayerDbId) {
        output.WriteUInt64(1, field_names[4], MemberPlayerDbId);
      }
      if (hasCurrentRegionRefId) {
        output.WriteUInt64(2, field_names[3], CurrentRegionRefId);
      }
      if (hasCurrentAvatarRefId) {
        output.WriteUInt64(3, field_names[0], CurrentAvatarRefId);
      }
      if (hasCurrentCharacterLevel) {
        output.WriteUInt64(4, field_names[1], CurrentCharacterLevel);
      }
      if (hasCurrentPvpFactionRefId) {
        output.WriteUInt64(5, field_names[2], CurrentPvpFactionRefId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMemberPlayerDbId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, MemberPlayerDbId);
      }
      if (hasCurrentRegionRefId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, CurrentRegionRefId);
      }
      if (hasCurrentAvatarRefId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, CurrentAvatarRefId);
      }
      if (hasCurrentCharacterLevel) {
        size += pb::CodedOutputStream.ComputeUInt64Size(4, CurrentCharacterLevel);
      }
      if (hasCurrentPvpFactionRefId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(5, CurrentPvpFactionRefId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CommunityMemberBroadcast ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CommunityMemberBroadcast ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CommunityMemberBroadcast ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CommunityMemberBroadcast ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CommunityMemberBroadcast ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CommunityMemberBroadcast ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CommunityMemberBroadcast ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CommunityMemberBroadcast ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CommunityMemberBroadcast ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CommunityMemberBroadcast ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CommunityMemberBroadcast MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CommunityMemberBroadcast prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CommunityMemberBroadcast, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CommunityMemberBroadcast cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CommunityMemberBroadcast result;
      
      private CommunityMemberBroadcast PrepareBuilder() {
        if (resultIsReadOnly) {
          CommunityMemberBroadcast original = result;
          result = new CommunityMemberBroadcast();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CommunityMemberBroadcast MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.CommunityMemberBroadcast.Descriptor; }
      }
      
      public override CommunityMemberBroadcast DefaultInstanceForType {
        get { return global::Gazillion.CommunityMemberBroadcast.DefaultInstance; }
      }
      
      public override CommunityMemberBroadcast BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CommunityMemberBroadcast) {
          return MergeFrom((CommunityMemberBroadcast) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CommunityMemberBroadcast other) {
        if (other == global::Gazillion.CommunityMemberBroadcast.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMemberPlayerDbId) {
          MemberPlayerDbId = other.MemberPlayerDbId;
        }
        if (other.HasCurrentRegionRefId) {
          CurrentRegionRefId = other.CurrentRegionRefId;
        }
        if (other.HasCurrentAvatarRefId) {
          CurrentAvatarRefId = other.CurrentAvatarRefId;
        }
        if (other.HasCurrentCharacterLevel) {
          CurrentCharacterLevel = other.CurrentCharacterLevel;
        }
        if (other.HasCurrentPvpFactionRefId) {
          CurrentPvpFactionRefId = other.CurrentPvpFactionRefId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_communityMemberBroadcastFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _communityMemberBroadcastFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMemberPlayerDbId = input.ReadUInt64(ref result.memberPlayerDbId_);
              break;
            }
            case 16: {
              result.hasCurrentRegionRefId = input.ReadUInt64(ref result.currentRegionRefId_);
              break;
            }
            case 24: {
              result.hasCurrentAvatarRefId = input.ReadUInt64(ref result.currentAvatarRefId_);
              break;
            }
            case 32: {
              result.hasCurrentCharacterLevel = input.ReadUInt64(ref result.currentCharacterLevel_);
              break;
            }
            case 40: {
              result.hasCurrentPvpFactionRefId = input.ReadUInt64(ref result.currentPvpFactionRefId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMemberPlayerDbId {
        get { return result.hasMemberPlayerDbId; }
      }
      public ulong MemberPlayerDbId {
        get { return result.MemberPlayerDbId; }
        set { SetMemberPlayerDbId(value); }
      }
      public Builder SetMemberPlayerDbId(ulong value) {
        PrepareBuilder();
        result.hasMemberPlayerDbId = true;
        result.memberPlayerDbId_ = value;
        return this;
      }
      public Builder ClearMemberPlayerDbId() {
        PrepareBuilder();
        result.hasMemberPlayerDbId = false;
        result.memberPlayerDbId_ = 0UL;
        return this;
      }
      
      public bool HasCurrentRegionRefId {
        get { return result.hasCurrentRegionRefId; }
      }
      public ulong CurrentRegionRefId {
        get { return result.CurrentRegionRefId; }
        set { SetCurrentRegionRefId(value); }
      }
      public Builder SetCurrentRegionRefId(ulong value) {
        PrepareBuilder();
        result.hasCurrentRegionRefId = true;
        result.currentRegionRefId_ = value;
        return this;
      }
      public Builder ClearCurrentRegionRefId() {
        PrepareBuilder();
        result.hasCurrentRegionRefId = false;
        result.currentRegionRefId_ = 123UL;
        return this;
      }
      
      public bool HasCurrentAvatarRefId {
        get { return result.hasCurrentAvatarRefId; }
      }
      public ulong CurrentAvatarRefId {
        get { return result.CurrentAvatarRefId; }
        set { SetCurrentAvatarRefId(value); }
      }
      public Builder SetCurrentAvatarRefId(ulong value) {
        PrepareBuilder();
        result.hasCurrentAvatarRefId = true;
        result.currentAvatarRefId_ = value;
        return this;
      }
      public Builder ClearCurrentAvatarRefId() {
        PrepareBuilder();
        result.hasCurrentAvatarRefId = false;
        result.currentAvatarRefId_ = 123UL;
        return this;
      }
      
      public bool HasCurrentCharacterLevel {
        get { return result.hasCurrentCharacterLevel; }
      }
      public ulong CurrentCharacterLevel {
        get { return result.CurrentCharacterLevel; }
        set { SetCurrentCharacterLevel(value); }
      }
      public Builder SetCurrentCharacterLevel(ulong value) {
        PrepareBuilder();
        result.hasCurrentCharacterLevel = true;
        result.currentCharacterLevel_ = value;
        return this;
      }
      public Builder ClearCurrentCharacterLevel() {
        PrepareBuilder();
        result.hasCurrentCharacterLevel = false;
        result.currentCharacterLevel_ = 0UL;
        return this;
      }
      
      public bool HasCurrentPvpFactionRefId {
        get { return result.hasCurrentPvpFactionRefId; }
      }
      public ulong CurrentPvpFactionRefId {
        get { return result.CurrentPvpFactionRefId; }
        set { SetCurrentPvpFactionRefId(value); }
      }
      public Builder SetCurrentPvpFactionRefId(ulong value) {
        PrepareBuilder();
        result.hasCurrentPvpFactionRefId = true;
        result.currentPvpFactionRefId_ = value;
        return this;
      }
      public Builder ClearCurrentPvpFactionRefId() {
        PrepareBuilder();
        result.hasCurrentPvpFactionRefId = false;
        result.currentPvpFactionRefId_ = 0UL;
        return this;
      }
    }
    static CommunityMemberBroadcast() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CommunityNotify : pb::GeneratedMessage<CommunityNotify, CommunityNotify.Builder> {
    private CommunityNotify() { }
    private static readonly CommunityNotify defaultInstance = new CommunityNotify().MakeReadOnly();
    private static readonly string[] _communityNotifyFieldNames = new string[] { "circleId", "operation", "sourcePlayerName", "targetPlayerDbId" };
    private static readonly uint[] _communityNotifyFieldTags = new uint[] { 24, 32, 18, 8 };
    public static CommunityNotify DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CommunityNotify DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CommunityNotify ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_CommunityNotify__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CommunityNotify, CommunityNotify.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_CommunityNotify__FieldAccessorTable; }
    }
    
    public const int TargetPlayerDbIdFieldNumber = 1;
    private bool hasTargetPlayerDbId;
    private ulong targetPlayerDbId_;
    public bool HasTargetPlayerDbId {
      get { return hasTargetPlayerDbId; }
    }
    public ulong TargetPlayerDbId {
      get { return targetPlayerDbId_; }
    }
    
    public const int SourcePlayerNameFieldNumber = 2;
    private bool hasSourcePlayerName;
    private string sourcePlayerName_ = "";
    public bool HasSourcePlayerName {
      get { return hasSourcePlayerName; }
    }
    public string SourcePlayerName {
      get { return sourcePlayerName_; }
    }
    
    public const int CircleIdFieldNumber = 3;
    private bool hasCircleId;
    private ulong circleId_;
    public bool HasCircleId {
      get { return hasCircleId; }
    }
    public ulong CircleId {
      get { return circleId_; }
    }
    
    public const int OperationFieldNumber = 4;
    private bool hasOperation;
    private global::Gazillion.ModifyCircleOperation operation_ = global::Gazillion.ModifyCircleOperation.eMCO_Add;
    public bool HasOperation {
      get { return hasOperation; }
    }
    public global::Gazillion.ModifyCircleOperation Operation {
      get { return operation_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetPlayerDbId) return false;
        if (!hasSourcePlayerName) return false;
        if (!hasCircleId) return false;
        if (!hasOperation) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _communityNotifyFieldNames;
      if (hasTargetPlayerDbId) {
        output.WriteUInt64(1, field_names[3], TargetPlayerDbId);
      }
      if (hasSourcePlayerName) {
        output.WriteString(2, field_names[2], SourcePlayerName);
      }
      if (hasCircleId) {
        output.WriteUInt64(3, field_names[0], CircleId);
      }
      if (hasOperation) {
        output.WriteEnum(4, field_names[1], (int) Operation, Operation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTargetPlayerDbId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, TargetPlayerDbId);
      }
      if (hasSourcePlayerName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, SourcePlayerName);
      }
      if (hasCircleId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, CircleId);
      }
      if (hasOperation) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Operation);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CommunityNotify ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CommunityNotify ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CommunityNotify ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CommunityNotify ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CommunityNotify ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CommunityNotify ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CommunityNotify ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CommunityNotify ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CommunityNotify ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CommunityNotify ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CommunityNotify MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CommunityNotify prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CommunityNotify, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CommunityNotify cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CommunityNotify result;
      
      private CommunityNotify PrepareBuilder() {
        if (resultIsReadOnly) {
          CommunityNotify original = result;
          result = new CommunityNotify();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CommunityNotify MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.CommunityNotify.Descriptor; }
      }
      
      public override CommunityNotify DefaultInstanceForType {
        get { return global::Gazillion.CommunityNotify.DefaultInstance; }
      }
      
      public override CommunityNotify BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CommunityNotify) {
          return MergeFrom((CommunityNotify) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CommunityNotify other) {
        if (other == global::Gazillion.CommunityNotify.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTargetPlayerDbId) {
          TargetPlayerDbId = other.TargetPlayerDbId;
        }
        if (other.HasSourcePlayerName) {
          SourcePlayerName = other.SourcePlayerName;
        }
        if (other.HasCircleId) {
          CircleId = other.CircleId;
        }
        if (other.HasOperation) {
          Operation = other.Operation;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_communityNotifyFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _communityNotifyFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTargetPlayerDbId = input.ReadUInt64(ref result.targetPlayerDbId_);
              break;
            }
            case 18: {
              result.hasSourcePlayerName = input.ReadString(ref result.sourcePlayerName_);
              break;
            }
            case 24: {
              result.hasCircleId = input.ReadUInt64(ref result.circleId_);
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.operation_, out unknown)) {
                result.hasOperation = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTargetPlayerDbId {
        get { return result.hasTargetPlayerDbId; }
      }
      public ulong TargetPlayerDbId {
        get { return result.TargetPlayerDbId; }
        set { SetTargetPlayerDbId(value); }
      }
      public Builder SetTargetPlayerDbId(ulong value) {
        PrepareBuilder();
        result.hasTargetPlayerDbId = true;
        result.targetPlayerDbId_ = value;
        return this;
      }
      public Builder ClearTargetPlayerDbId() {
        PrepareBuilder();
        result.hasTargetPlayerDbId = false;
        result.targetPlayerDbId_ = 0UL;
        return this;
      }
      
      public bool HasSourcePlayerName {
        get { return result.hasSourcePlayerName; }
      }
      public string SourcePlayerName {
        get { return result.SourcePlayerName; }
        set { SetSourcePlayerName(value); }
      }
      public Builder SetSourcePlayerName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSourcePlayerName = true;
        result.sourcePlayerName_ = value;
        return this;
      }
      public Builder ClearSourcePlayerName() {
        PrepareBuilder();
        result.hasSourcePlayerName = false;
        result.sourcePlayerName_ = "";
        return this;
      }
      
      public bool HasCircleId {
        get { return result.hasCircleId; }
      }
      public ulong CircleId {
        get { return result.CircleId; }
        set { SetCircleId(value); }
      }
      public Builder SetCircleId(ulong value) {
        PrepareBuilder();
        result.hasCircleId = true;
        result.circleId_ = value;
        return this;
      }
      public Builder ClearCircleId() {
        PrepareBuilder();
        result.hasCircleId = false;
        result.circleId_ = 0UL;
        return this;
      }
      
      public bool HasOperation {
       get { return result.hasOperation; }
      }
      public global::Gazillion.ModifyCircleOperation Operation {
        get { return result.Operation; }
        set { SetOperation(value); }
      }
      public Builder SetOperation(global::Gazillion.ModifyCircleOperation value) {
        PrepareBuilder();
        result.hasOperation = true;
        result.operation_ = value;
        return this;
      }
      public Builder ClearOperation() {
        PrepareBuilder();
        result.hasOperation = false;
        result.operation_ = global::Gazillion.ModifyCircleOperation.eMCO_Add;
        return this;
      }
    }
    static CommunityNotify() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetStructLiveTuningSettingEnumValue : pb::GeneratedMessage<NetStructLiveTuningSettingEnumValue, NetStructLiveTuningSettingEnumValue.Builder> {
    private NetStructLiveTuningSettingEnumValue() { }
    private static readonly NetStructLiveTuningSettingEnumValue defaultInstance = new NetStructLiveTuningSettingEnumValue().MakeReadOnly();
    private static readonly string[] _netStructLiveTuningSettingEnumValueFieldNames = new string[] { "tuningVarEnum", "tuningVarValue" };
    private static readonly uint[] _netStructLiveTuningSettingEnumValueFieldTags = new uint[] { 8, 21 };
    public static NetStructLiveTuningSettingEnumValue DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetStructLiveTuningSettingEnumValue DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetStructLiveTuningSettingEnumValue ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructLiveTuningSettingEnumValue__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetStructLiveTuningSettingEnumValue, NetStructLiveTuningSettingEnumValue.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructLiveTuningSettingEnumValue__FieldAccessorTable; }
    }
    
    public const int TuningVarEnumFieldNumber = 1;
    private bool hasTuningVarEnum;
    private int tuningVarEnum_;
    public bool HasTuningVarEnum {
      get { return hasTuningVarEnum; }
    }
    public int TuningVarEnum {
      get { return tuningVarEnum_; }
    }
    
    public const int TuningVarValueFieldNumber = 2;
    private bool hasTuningVarValue;
    private float tuningVarValue_;
    public bool HasTuningVarValue {
      get { return hasTuningVarValue; }
    }
    public float TuningVarValue {
      get { return tuningVarValue_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTuningVarEnum) return false;
        if (!hasTuningVarValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netStructLiveTuningSettingEnumValueFieldNames;
      if (hasTuningVarEnum) {
        output.WriteInt32(1, field_names[0], TuningVarEnum);
      }
      if (hasTuningVarValue) {
        output.WriteFloat(2, field_names[1], TuningVarValue);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTuningVarEnum) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, TuningVarEnum);
      }
      if (hasTuningVarValue) {
        size += pb::CodedOutputStream.ComputeFloatSize(2, TuningVarValue);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetStructLiveTuningSettingEnumValue ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructLiveTuningSettingEnumValue ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructLiveTuningSettingEnumValue ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructLiveTuningSettingEnumValue ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructLiveTuningSettingEnumValue ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructLiveTuningSettingEnumValue ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetStructLiveTuningSettingEnumValue ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetStructLiveTuningSettingEnumValue ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetStructLiveTuningSettingEnumValue ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructLiveTuningSettingEnumValue ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetStructLiveTuningSettingEnumValue MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetStructLiveTuningSettingEnumValue prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetStructLiveTuningSettingEnumValue, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetStructLiveTuningSettingEnumValue cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetStructLiveTuningSettingEnumValue result;
      
      private NetStructLiveTuningSettingEnumValue PrepareBuilder() {
        if (resultIsReadOnly) {
          NetStructLiveTuningSettingEnumValue original = result;
          result = new NetStructLiveTuningSettingEnumValue();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetStructLiveTuningSettingEnumValue MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.NetStructLiveTuningSettingEnumValue.Descriptor; }
      }
      
      public override NetStructLiveTuningSettingEnumValue DefaultInstanceForType {
        get { return global::Gazillion.NetStructLiveTuningSettingEnumValue.DefaultInstance; }
      }
      
      public override NetStructLiveTuningSettingEnumValue BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetStructLiveTuningSettingEnumValue) {
          return MergeFrom((NetStructLiveTuningSettingEnumValue) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetStructLiveTuningSettingEnumValue other) {
        if (other == global::Gazillion.NetStructLiveTuningSettingEnumValue.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTuningVarEnum) {
          TuningVarEnum = other.TuningVarEnum;
        }
        if (other.HasTuningVarValue) {
          TuningVarValue = other.TuningVarValue;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netStructLiveTuningSettingEnumValueFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netStructLiveTuningSettingEnumValueFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTuningVarEnum = input.ReadInt32(ref result.tuningVarEnum_);
              break;
            }
            case 21: {
              result.hasTuningVarValue = input.ReadFloat(ref result.tuningVarValue_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTuningVarEnum {
        get { return result.hasTuningVarEnum; }
      }
      public int TuningVarEnum {
        get { return result.TuningVarEnum; }
        set { SetTuningVarEnum(value); }
      }
      public Builder SetTuningVarEnum(int value) {
        PrepareBuilder();
        result.hasTuningVarEnum = true;
        result.tuningVarEnum_ = value;
        return this;
      }
      public Builder ClearTuningVarEnum() {
        PrepareBuilder();
        result.hasTuningVarEnum = false;
        result.tuningVarEnum_ = 0;
        return this;
      }
      
      public bool HasTuningVarValue {
        get { return result.hasTuningVarValue; }
      }
      public float TuningVarValue {
        get { return result.TuningVarValue; }
        set { SetTuningVarValue(value); }
      }
      public Builder SetTuningVarValue(float value) {
        PrepareBuilder();
        result.hasTuningVarValue = true;
        result.tuningVarValue_ = value;
        return this;
      }
      public Builder ClearTuningVarValue() {
        PrepareBuilder();
        result.hasTuningVarValue = false;
        result.tuningVarValue_ = 0F;
        return this;
      }
    }
    static NetStructLiveTuningSettingEnumValue() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NetStructLiveTuningSettingProtoEnumValue : pb::GeneratedMessage<NetStructLiveTuningSettingProtoEnumValue, NetStructLiveTuningSettingProtoEnumValue.Builder> {
    private NetStructLiveTuningSettingProtoEnumValue() { }
    private static readonly NetStructLiveTuningSettingProtoEnumValue defaultInstance = new NetStructLiveTuningSettingProtoEnumValue().MakeReadOnly();
    private static readonly string[] _netStructLiveTuningSettingProtoEnumValueFieldNames = new string[] { "tuningVarEnum", "tuningVarProtoId", "tuningVarValue" };
    private static readonly uint[] _netStructLiveTuningSettingProtoEnumValueFieldTags = new uint[] { 16, 8, 29 };
    public static NetStructLiveTuningSettingProtoEnumValue DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NetStructLiveTuningSettingProtoEnumValue DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NetStructLiveTuningSettingProtoEnumValue ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructLiveTuningSettingProtoEnumValue__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NetStructLiveTuningSettingProtoEnumValue, NetStructLiveTuningSettingProtoEnumValue.Builder> InternalFieldAccessors {
      get { return global::Gazillion.CommonMessages.internal__static_Gazillion_NetStructLiveTuningSettingProtoEnumValue__FieldAccessorTable; }
    }
    
    public const int TuningVarProtoIdFieldNumber = 1;
    private bool hasTuningVarProtoId;
    private ulong tuningVarProtoId_;
    public bool HasTuningVarProtoId {
      get { return hasTuningVarProtoId; }
    }
    public ulong TuningVarProtoId {
      get { return tuningVarProtoId_; }
    }
    
    public const int TuningVarEnumFieldNumber = 2;
    private bool hasTuningVarEnum;
    private int tuningVarEnum_;
    public bool HasTuningVarEnum {
      get { return hasTuningVarEnum; }
    }
    public int TuningVarEnum {
      get { return tuningVarEnum_; }
    }
    
    public const int TuningVarValueFieldNumber = 3;
    private bool hasTuningVarValue;
    private float tuningVarValue_;
    public bool HasTuningVarValue {
      get { return hasTuningVarValue; }
    }
    public float TuningVarValue {
      get { return tuningVarValue_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTuningVarProtoId) return false;
        if (!hasTuningVarEnum) return false;
        if (!hasTuningVarValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _netStructLiveTuningSettingProtoEnumValueFieldNames;
      if (hasTuningVarProtoId) {
        output.WriteUInt64(1, field_names[1], TuningVarProtoId);
      }
      if (hasTuningVarEnum) {
        output.WriteInt32(2, field_names[0], TuningVarEnum);
      }
      if (hasTuningVarValue) {
        output.WriteFloat(3, field_names[2], TuningVarValue);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTuningVarProtoId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, TuningVarProtoId);
      }
      if (hasTuningVarEnum) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, TuningVarEnum);
      }
      if (hasTuningVarValue) {
        size += pb::CodedOutputStream.ComputeFloatSize(3, TuningVarValue);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NetStructLiveTuningSettingProtoEnumValue ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructLiveTuningSettingProtoEnumValue ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructLiveTuningSettingProtoEnumValue ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NetStructLiveTuningSettingProtoEnumValue ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NetStructLiveTuningSettingProtoEnumValue ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructLiveTuningSettingProtoEnumValue ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NetStructLiveTuningSettingProtoEnumValue ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NetStructLiveTuningSettingProtoEnumValue ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NetStructLiveTuningSettingProtoEnumValue ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NetStructLiveTuningSettingProtoEnumValue ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NetStructLiveTuningSettingProtoEnumValue MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NetStructLiveTuningSettingProtoEnumValue prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NetStructLiveTuningSettingProtoEnumValue, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NetStructLiveTuningSettingProtoEnumValue cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NetStructLiveTuningSettingProtoEnumValue result;
      
      private NetStructLiveTuningSettingProtoEnumValue PrepareBuilder() {
        if (resultIsReadOnly) {
          NetStructLiveTuningSettingProtoEnumValue original = result;
          result = new NetStructLiveTuningSettingProtoEnumValue();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NetStructLiveTuningSettingProtoEnumValue MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.NetStructLiveTuningSettingProtoEnumValue.Descriptor; }
      }
      
      public override NetStructLiveTuningSettingProtoEnumValue DefaultInstanceForType {
        get { return global::Gazillion.NetStructLiveTuningSettingProtoEnumValue.DefaultInstance; }
      }
      
      public override NetStructLiveTuningSettingProtoEnumValue BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NetStructLiveTuningSettingProtoEnumValue) {
          return MergeFrom((NetStructLiveTuningSettingProtoEnumValue) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NetStructLiveTuningSettingProtoEnumValue other) {
        if (other == global::Gazillion.NetStructLiveTuningSettingProtoEnumValue.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTuningVarProtoId) {
          TuningVarProtoId = other.TuningVarProtoId;
        }
        if (other.HasTuningVarEnum) {
          TuningVarEnum = other.TuningVarEnum;
        }
        if (other.HasTuningVarValue) {
          TuningVarValue = other.TuningVarValue;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_netStructLiveTuningSettingProtoEnumValueFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _netStructLiveTuningSettingProtoEnumValueFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTuningVarProtoId = input.ReadUInt64(ref result.tuningVarProtoId_);
              break;
            }
            case 16: {
              result.hasTuningVarEnum = input.ReadInt32(ref result.tuningVarEnum_);
              break;
            }
            case 29: {
              result.hasTuningVarValue = input.ReadFloat(ref result.tuningVarValue_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTuningVarProtoId {
        get { return result.hasTuningVarProtoId; }
      }
      public ulong TuningVarProtoId {
        get { return result.TuningVarProtoId; }
        set { SetTuningVarProtoId(value); }
      }
      public Builder SetTuningVarProtoId(ulong value) {
        PrepareBuilder();
        result.hasTuningVarProtoId = true;
        result.tuningVarProtoId_ = value;
        return this;
      }
      public Builder ClearTuningVarProtoId() {
        PrepareBuilder();
        result.hasTuningVarProtoId = false;
        result.tuningVarProtoId_ = 0UL;
        return this;
      }
      
      public bool HasTuningVarEnum {
        get { return result.hasTuningVarEnum; }
      }
      public int TuningVarEnum {
        get { return result.TuningVarEnum; }
        set { SetTuningVarEnum(value); }
      }
      public Builder SetTuningVarEnum(int value) {
        PrepareBuilder();
        result.hasTuningVarEnum = true;
        result.tuningVarEnum_ = value;
        return this;
      }
      public Builder ClearTuningVarEnum() {
        PrepareBuilder();
        result.hasTuningVarEnum = false;
        result.tuningVarEnum_ = 0;
        return this;
      }
      
      public bool HasTuningVarValue {
        get { return result.hasTuningVarValue; }
      }
      public float TuningVarValue {
        get { return result.TuningVarValue; }
        set { SetTuningVarValue(value); }
      }
      public Builder SetTuningVarValue(float value) {
        PrepareBuilder();
        result.hasTuningVarValue = true;
        result.tuningVarValue_ = value;
        return this;
      }
      public Builder ClearTuningVarValue() {
        PrepareBuilder();
        result.hasTuningVarValue = false;
        result.tuningVarValue_ = 0F;
        return this;
      }
    }
    static NetStructLiveTuningSettingProtoEnumValue() {
      object.ReferenceEquals(global::Gazillion.CommonMessages.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
